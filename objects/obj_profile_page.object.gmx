<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mover
move = 0;

///In-launcher dialog
dialog = 0;
dialog_description = "";
dialog_return = "";
dialog_inputb = " ";
dialog_filterleft = 1280;
dialog_filterright = 1280;

///Selector's main base colors
col_numb = 0;
col_mod = 0;

///Create a variable to access "User", Fenix Launcher and both "Local" and "Roaming" AppData folders
global.userdir = environment_get_variable("USERPROFILE");
global.launcherdir = global.userdir + "\NX_Launcher_Plus"
global.local_appdatadir = global.userdir + "\AppData\Local"
global.roaming_appdatadir = global.userdir + "\AppData\Roaming"
global.appdata_launcherdir = global.local_appdatadir + "\NX_Launcher_"
global.launcher_coredir = working_directory + "\core"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_released(ord("A")))
{
    obj_fenix_core.profile_page = 0
    room_goto(rm_fenix_launcher)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Profile Page UI
/// ---------- Color Variables ----------
//Black and White (for theme-switching)
c_fx_black = make_colour_rgb(35, 35, 35);
c_fx_white = $f0f0f0
//Blue and Aqua (Cursor)
c_fx_cursor_blue = make_colour_rgb(30, 96, 186);
c_fx_cursor_aqua = make_colour_rgb(0,153,153);
//Blue and Aqua (Normal, Alt. and Names)
c_switchblue = (make_colour_rgb(70,152,200));
c_switchblue_alt = (make_colour_rgb(0,76,153));
c_switchblue_name = (make_colour_rgb(102,178,255));
c_switchaqua = (make_colour_rgb(82,209,202));
c_switchaqua_alt = (make_colour_rgb(0,153,153));
c_switchaqua_name = (make_colour_rgb(0,204,204));
//Blue and Aqua (Merged, useful for effects and names)
c_switchaqua_merge = merge_colour(c_switchaqua, c_switchaqua_alt,col_numb);
c_switchblue_merge = merge_colour(c_switchblue, c_switchblue_alt,col_numb);
c_switchaqua_nmerge = merge_colour(c_switchaqua, c_switchaqua_name,col_numb);
c_switchblue_nmerge = merge_colour(c_switchblue, c_switchblue_name,col_numb);
//Error
c_switcherror = merge_colour(c_red, c_maroon, col_numb);
//Edit Mode
c_switchmove = merge_colour(c_yellow, c_orange, col_numb);

/// ---------- Wallpaper ----------
//No wallpaper exists
switch (theme)
{
    case 0:
    draw_background_tiled_ext(bg_dark, 0, 0, 1, 1, c_white, 1);
    break;
    
    case 1:
    draw_background_tiled_ext(bg_light, 0, 0, 1, 1, c_white, 1);
    break;
}

/// ---------- Controller and Keyboard UI ----------


//Controllers
draw_set_font(font_details)

//XInput (Xbox and Nintendo controllers)
if(gamepad_is_connected(0) == 1)
{
    //XInput Controller connected
    draw_sprite_ext(spr_ctr_xinput,theme,160,650,1,1,0,c_white,1);
    
    //Icons
        switch (move)
        {
            case 0:
            draw_sprite_ext(spr_ctr_xinput_leftright, theme, 640-70, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_ctr_xinput_shift, theme, 860+15, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_ctr_xinput_enter, theme,1080, 662, 1, 1, 0, c_white, 1);
            break;
            
            case 1:
            draw_sprite_ext(spr_ctr_xinput_leftright, theme,410, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_ctr_xinput_delete, theme, 640+70, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_ctr_xinput_shift, theme, 860, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_ctr_xinput_enter, theme,1080, 662, 1, 1, 0, c_white, 1);
            break;
        }
        
        //Strings
        switch (theme)
        {
            case 0:
            draw_set_colour(c_white)
            break;
            
            case 1:
            draw_set_colour(c_black)
            break;
        }
        switch (move)
        {
            case 0:
            draw_text(704-90, 658, string(command_move));
            draw_text(922-5, 658, string(command_edit));
            draw_text(1140-20, 658, string(command_start));
            break;
            
            case 1:
            draw_text(456, 658, string(command_move));
            draw_text(694+65, 658, string(command_delete));
            draw_text(912-7, 658, string(command_normal));
            draw_text(1140-20, 658, string(command_place));
            break;
        }

};

//DInput (PlayStation and Generic controllers)
else if (gamepad_is_connected(4) == 1)
{
    //XInput Controller connected
    draw_sprite_ext(spr_ctr_dinput,theme,160,650,1,1,0,c_white,1);
    
        //Icons
        switch (move)
        {
            case 0:
            draw_sprite_ext(spr_ctr_dinput_leftright, theme, 640-70, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_ctr_dinput_shift, theme, 860+15, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_ctr_dinput_enter, theme,1080, 662, 1, 1, 0, c_white, 1);
            break;
            
            case 1:
            draw_sprite_ext(spr_ctr_dinput_leftright, theme,410, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_ctr_dinput_delete, theme, 640+70, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_ctr_dinput_shift, theme, 860, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_ctr_dinput_enter, theme,1080, 662, 1, 1, 0, c_white, 1);
            break;
        }
        
        //Strings
        switch (theme)
        {
            case 0:
            draw_set_colour(c_white)
            break;
            
            case 1:
            draw_set_colour(c_black)
            break;
        }
        switch (move)
        {
            case 0:
            draw_text(704-90, 658, string(command_move));
            draw_text(922-5, 658, string(command_edit));
            draw_text(1140-20, 658, string(command_start));
            break;
            
            case 1:
            draw_text(456, 658, string(command_move));
            draw_text(694+65, 658, string(command_delete));
            draw_text(912-7, 658, string(command_normal));
            draw_text(1140-20, 658, string(command_place));
            break;
        }
};
//Keyboard
else
{
    //Keyboard connected
    draw_sprite_ext(spr_kbd,theme,160,650,1,1,0,c_white,1);
    
        //Icons
        switch (move)
        {
            case 0:
            draw_sprite_ext(spr_kbd_leftright, theme, 640-70, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_kbd_shift, theme, 860+15, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_kbd_enter, theme,1080, 662, 1, 1, 0, c_white, 1);
            break;
            
            case 1:
            draw_sprite_ext(spr_kbd_leftright, theme,410, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_kbd_delete, theme, 640+70, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_kbd_shift, theme, 860, 662, 1, 1, 0, c_white, 1);
            draw_sprite_ext(spr_kbd_enter, theme,1080, 662, 1, 1, 0, c_white, 1);
            break;
        }
        
        //Strings
        switch (theme)
        {
            case 0:
            draw_set_colour(c_white)
            break;
            
            case 1:
            draw_set_colour(c_black)
            break;
        }
        switch (move)
        {
            case 0:
            draw_text(704-90, 658, string(command_move));
            draw_text(922-5, 658, string(command_edit));
            draw_text(1140-20, 658, string(command_start));
            break;
            
            case 1:
            draw_text(456, 658, string(command_move));
            draw_text(694+65, 658, string(command_delete));
            draw_text(912-7, 658, string(command_normal));
            draw_text(1140-20, 658, string(command_place));
            break;
        }
    
};


//Draw profile picture
if (sprite_exists(profile_icon))
{
    draw_sprite_stretched_ext(profile_icon, 0, 32, 30, 64, 64, c_white, 1);
    
}
else
{
    draw_sprite_stretched_ext(spr_default_profilepicture, 0, 32, 30, 64, 64, c_white, 1);
}
draw_sprite_ext(spr_default_profilepicture_border_alt, theme, 32, 30, 1, 1, 0, c_white, 1);
draw_set_font(font_titles)
draw_text(112, 48, home_profilepage_open)


/// ---------- Filter ----------
//Fundo
if(dialog != 0)
{
    switch (theme)
    {
        case 0:
        draw_set_colour(c_fx_black);
        break;
        
        case 1:
        draw_set_colour(c_fx_white);
        break;
    }
    draw_set_alpha(0.9);
    draw_rectangle(dialog_filterleft,-3000,dialog_filterright,720+3000,0);
    draw_set_colour(c_white);
    draw_set_alpha(1);
};

//Alterar titulo do jogo
if(dialog != 0){

    var dg_offset;
    if(dialog == 1)
        dg_offset = 0;
    else
        dg_offset = 194;
         
    //Descrição
    switch (theme)
    {
        case 0:
        draw_set_colour(c_switchaqua_merge);
        break;
        
        case 1:
        draw_set_colour(c_switchblue_merge);
        break;
    }
    draw_set_halign(fa_center);
    draw_text(1280/2,(720/2-48)+dg_offset,dialog_description+" ("+string(string_length(dialog_return))+"/32)");
        
    //Texto
    if(theme == 1)
        draw_set_colour(c_white);
    else
        draw_set_colour(c_black);
    draw_text(1280/2,(720/2)+dg_offset,dialog_return+dialog_inputb);
    draw_set_halign(fa_left);
    draw_set_colour(c_white);
};

//Deletando...
if(alarm[10] != -1){

    //Fundo
    if(theme == 0)
        draw_set_colour(c_white);
    else
        draw_set_colour(c_black);
    draw_set_alpha(0.7);
    draw_rectangle(-3000,-3000,1280+3000,720+3000,0);
    draw_set_alpha(1);
    draw_set_colour(c_white);
    
    //Texto
    draw_set_colour(c_red);
    draw_set_halign(fa_center);
    draw_text(1280/2,(720/2)-32,"Deleting...");
    draw_set_halign(fa_left);
    draw_set_colour(c_white);
};


//Screen filter (when not using the launcher)
if!(window_has_focus())
&amp;&amp;!(window_get_fullscreen()){

    draw_set_colour(c_black);
    draw_set_alpha(0.7);
    draw_rectangle(0,0,1280,720,0);
    draw_set_alpha(1);
    draw_set_colour(c_white);
};


/// ---------- Cursor ----------


//Draw cursor
switch (theme)
{
    case 0:
    draw_sprite_ext(spr_default_cursor, 0, mouse_x, mouse_y, 1, 1, 0, c_fx_cursor_blue, 1);
    break;
    
    case 1:
    draw_sprite_ext(spr_default_cursor, 0, mouse_x, mouse_y, 1, 1, 0, c_fx_cursor_aqua, 1);
    break;
}
window_set_cursor(cr_none);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load assets (Titles, custom theme and song)
// ---------- Custom Theme ----------
ini_open(game_save_id + "custom_theme\_theme.ini");
theme = real(ini_read_string("NX_THEME", "theme", "1"));
custom_bg_path = ini_read_string("NX_THEME", "custom_bg_path", string(game_save_id + "custom_theme\_wallpaper.png"))
custom_details_font = ini_read_string("NX_THEME", "custom_details_font", string(game_save_id + "custom_theme\fonts\thm_details.ttf"))
custom_titles_font = ini_read_string("NX_THEME", "custom_titles_font", string(game_save_id + "custom_theme\fonts\thm_titles.ttf"))
ini_close();


//Profile Picture
if !(file_exists(game_save_id + "_profile.png"))
{
    profile_icon = spr_default_profilepicture;
}
else
{
    ini_open(game_save_id + "_data.ini");
    profile_image = ini_read_string("User Data", "profile_icon", game_save_id + "_profile.png");
    profile_icon = sprite_add(profile_image, 0, false, false, 0, 0);
    ini_close();
}

///Fonts
//Titles
if (file_exists_fmns(game_save_id + "custom_theme\fonts\thm_titles.ttf"))
{
    font_delete(font_titles);
    font_titles = font_add(custom_titles_font, 24, false, false, 32, 255)
}

//Details
if (file_exists_fmns(game_save_id + "custom_theme\fonts\thm_details.ttf"))
{
    font_delete(font_details);
    font_details = font_add(custom_details_font, 18, false, false, 32, 255)
}

///Sound effects
if (file_exists_fmns(game_save_id + "custom_theme\sounds\thm_sfx_select.wav"))
{
    snd_sfx_gameselect = audio_create_stream(game_save_id + "custom_theme\sounds\thm_sfx_select.wav")
}

//Clean
cleanmem();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NX Launcher+ initializer
//Set release mode (only seen in code, varies from Macros)
gml_release_mode(RELEASE_MODE);

//Set fullscreen
alarm[4] = 6;

//Center window (if on "Window Mode")
alarm[3] = 2;

//Start Clean Memory
cleanmem_init(0);

//Clean Memory
cleanmem();

//Clean inputs
io_clear();

///Check if it's a First Run
ini_open(game_save_id + '_data.ini');
global.first_run = ini_read_real("Launcher Data", "first_run", 1);
ini_close();

///If isn't a first run, load settings and profile from .ini file
if (global.first_run == 0) &amp;&amp; (file_exists(game_save_id + '_data.ini'))
{
    ini_open(game_save_id + '_data.ini');
    theme = ini_read_real("Settings", "theme", "0");
    fullscreen = ini_read_real("Settings", "fullscreen", "0");
    language = ini_read_string("Settings", "lang", "en");
    uirender = ini_read_real("Settings", "uirender", "0");
    discord_enable = ini_read_real("Settings", "discord", "1");
    database_thumbnail = ini_read_real("Settings", "thumb_db", "0");
    database_profilepic = ini_read_real("Settings", "profilepic_db", "0");
    database_wallpaper = ini_read_real("Settings", "wallpaper_db", "0");
    update_check = ini_read_real("Launcher Data", "update_check", "0");
    select_index = ini_read_real("Launcher Data", "position", "0");
    profile_name = ini_read_string("User Data", "profile_name", "User");
    custom_bg = ini_read_string("User Data", "custom_bg", game_save_id + "custom_theme\_wallpaper.png");
    profile_image = ini_read_string("User Data", "profile_icon", game_save_id + "_profile.png");
    profile_icon = sprite_add(profile_image, 0, false, false, 0, 0);
    ini_close();
}

//Load launcher strings by language
language_set();

//Set font variables
font_titles = fnt_default_titles;
font_details = fnt_default_details;
font_popup = fnt_default_popup;
font_clock = fnt_default_clock;

///Create variables for default sounds
snd_sfx_gameselect = sfx_nx_system_gameselect
snd_sfx_gamestart = sfx_nx_system_gamestart
snd_sfx_gamedelete = sfx_nx_system_error

//Carregar assets
event_user(13);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Render mode: 1
if (uirender == 1)
{
    event_user(15);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Render mode: 0
if (uirender == 0)
{
    event_user(15);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
