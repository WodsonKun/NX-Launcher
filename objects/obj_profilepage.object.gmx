<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variáveis
category = "profile";
menupos = 145;
menuoffset = 80;
surf = -1;
profile_surf = -1;
init_text = "";

///Mover
move = 0;

///In-launcher dialog
dialog = 0;
dialog_description = "";
dialog_return = "";
dialog_inputb = " ";
dialog_filterleft = 1280;
dialog_filterright = 1280;

///Selector's main base colors
col_numb = 0;
col_mod = 0;

///Create a variable to access "User", Fenix Launcher and both "Local" and "Roaming" AppData folders
global.userdir = environment_get_variable("USERPROFILE");
global.launcherdir = global.userdir + "\NX_Launcher_Plus"
global.local_appdatadir = global.userdir + "\AppData\Local"
global.roaming_appdatadir = global.userdir + "\AppData\Roaming"
global.appdata_launcherdir = global.local_appdatadir + "\NX_Launcher_"
global.launcher_coredir = working_directory + "\core"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controlar as configurações
init_text = keyboard_string;

if(mouse_check_button_released(mb_left))||(mouse_check_button_released(mb_right))
{
    //Profile
    if(point_in_rectangle(mouse_x, mouse_y, 0, 145, 320, 209))
    {
        category = "profile"
    }
    //Draw highlight
    if (point_in_rectangle(mouse_x, mouse_y, 464, 160, 464+256, 160+256))
    {
        add_profilepicture_next();
    }
    
    //Discord
    if(point_in_rectangle(mouse_x, mouse_y, 0, 225, 320, 289))
    {
        category = "database"
    }
}

if (init_text != "")&amp;&amp;(keyboard_check_released(vk_enter))
{
    ini_open(game_save_id + '_data.ini');
    ini_write_string("User Data", "profile_name", init_text);
    ini_close();
}

//Go back to the HOME Menu
if (keyboard_check_released(vk_escape))
{
    room_goto(rm_homemenu);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stores strings of the launcher
///Languages
switch (global.lang)
{
    //EN: English (United States)
    case "EN":
    
    //Setup Wizard
    str_setupwizard_title = "Setup Wizard";
    str_setupwizard_step1 = "Step 1: Create your profile";
    str_setupwizard_step2 = "Step 2: Enable Online Updates for the launcher";
    str_setupwizard_step3 = "Step 3: Setup your Discord's Rich Presence status";
    str_setupwizard_finished = "Finished!";
    str_setupwizard_desc1 = "Change profile picture";
    str_setupwizard_desc2 = "Please, input your username here:";
    str_setupwizard_desc3 = "Do you wanna enable online updates?";
    str_setupwizard_desc4 = "We detected that you have Discord installed#on your computer.##Do you wanna enable Rich Presence?";
    str_setupwizard_quest1 = "Yup, sure!";
    str_setupwizard_quest2 = "No, thanks.";
    str_setupwizard_text = "Congrats! You've just finished NX Launcher+'s Setup Wizard!#Feel free to check our info in the About screen on Settings.#I hope you enjoy and make good use of this launcher.##Sincerely,#WodsonKun";
    
    //[HOME Menu Strings]
    home_main = "HOME Menu"
    home_news = "News"
    home_freeshop = "Ninty FreeShop"
    home_thumbadd = "Add thumbnails"
        
    //[HOME Menu Pop-Up Strings]
    home_change_background = "Change background"
    home_change_lighttheme = "Change to Light Theme"
    home_change_darktheme = "Change to Dark Theme"
    home_change_music = "Change launcher's music"
    home_change_theme = "Change theme"
    home_folder_opener = "Open data folder"
    
    //[Settings Strings]
    settings_main = "Settings"
    
    //[Command Strings]
    command_start = "Start"
    command_edit = "Edit Mode"
    command_delete = "Delete"
    command_move = "Move to Left / Right"
    command_normal = "Normal Mode"
    command_place = "Place"
        
    //[Question Strings]
    question_shortcut = "Do you want turn this game/application into a shortcut?#This option is useful for common applications or that already have their own launcher#Obs.: If you turn this game a shortcut, it will not run in Game Mode."
    question_romshortcut = "Do you want turn this title into a ROM shortcut?#It will run the ROM directly from the launcher."
    
    //[File Strings]
    file_main_filter = "Windows Game / Application (.exe)|*.exe|Steam Game / Application (.url)|*.url|Java Game / Application (.jar)|*.jar"
    file_main_title = "Select a game, app or ROM"
    file_emulator_filter = "Emulator (.exe)|*.exe"
    file_emulator_title = "Select your emulator's path"
    file_thumbnail_filter = "Thumbnail Images (256x256)|*.png"
    file_thumbnail_title = "Select a thumbnail image"
    file_wallpaper_filter = "Wallpapers (1280x720)|*.png"
    file_wallpaper_title = "Choose a wallpaper"
    file_screenshot_filter = "Fenix's Screenshot (.png)|*.png"
    file_screenshot_title = "Save your screenshot"
    file_theme_filter = "Custom Theme (.thm)|*.thm"
    file_theme_name = "Select a custom theme"
    
    //[Emulator Filter Strings]
    //Nintendo Entertainment System
    file_nes_rom_filter = "NES ROMs (.nes)|*.nes|Famicom Disk System ROMs (.fds)|*.fds"
    file_nes_rom_name = "Select a Nintendo Entertainment System or a Famicom Disk System ROM"
    //Super Nintendo Entertainment System
    file_snes_rom_filter = "SNES ROMs (.smc, .sfc)|*.smc;*.sfc"
    file_snes_rom_name = "Select an Super Nintendo Entertainment System ROM"
    //Nintendo Game Boy (Original, Color, Advance and Super)
    file_gameboy_rom_filter = "Nintendo Game Boy (.gb)|*.gb|Nintendo Game Boy Color (.gbc)|*.gbc|Nintendo Game Boy (.gba, .agb)|*.gba;.*agb|Nintendo Super Game Boy (.sgb)|*.sgb"
    file_gameboy_rom_name = "Select a Nintendo Game Boy (Original, Color, Advance or Super) ROM"
    //Nintendo 3DS
    file_3ds_rom_filter = "Nintendo 3DS ROMs (.3ds, .3dsx, .cci, .cxi)|*.3ds;*.3dsx;*.cci;*.cxi"
    file_3ds_rom_name = "Select a Nintendo 3DS ROM"
    //Nintendo WiiU
    file_wiiu_rom_filter = "Nintendo WiiU ROMs (.rpx)|*.rpx"
    file_wiiu_rom_name = "Select a Nintendo WiiU ROM"
    //Nintendo Switch
    file_switch_rom_filter = "Nintendo Switch ROMs (.xci, .nro, .nso)|*.xci;*.nro;*.nso"
    file_switch_rom_name = "Select an Nintendo Switch ROM"
    //SEGA Master System / Game Gear / Genesis / 32x / CD
    file_sega_rom_filter = "SEGA Master System (.sms)|*.sms|SEGA Genesis / Mega Drive / CD /32x (.gen, .bin, .cue)|*.gen;*.bin;*.cue|SEGA Game Gear (.gg)|*.gg"
    file_sega_rom_name = "Select a SEGA Master System / Game Gear / Genesis / 32x / CD ROM"
    //PlayStation
    file_psx_rom_filter = "PSX ROMs (.iso, .bin, .cue, .img, .exe)|*.iso;*.bin;*.cue;*.img;*.exe"
    file_psx_rom_name = "Select an PlayStation ROM"
    //PlayStation Portable
    file_psp_rom_filter = "PSP ROMs (.iso, .cso, .PBP, .elf)|*.iso;*.cso;*.PBP;*.elf"
    file_psp_rom_name = "Select an PlayStation Portable ROM"
    //PlayStation 2
    file_ps2_rom_filter = "PS2 ROMs (.iso, .elf)|*.iso;*.elf"
    file_ps2_rom_name = "Select an PlayStation 2 ROM"
    break;
    
    //ES: Spanish
    case "ES":
    break;
    
    //FR: French
    case "FR":
    break;
    
    //IT: Italian
    case "IT":
    break;
    
    //GE: German
    case "GE":
    break;
    
    //BR: Portuguese
    case "BR":
    break;
    
    //JP: Japanese
    case "JP":
    break;
    
    //CH: Chinese
    case "CH":
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load assets (Titles, custom theme and song)
///Create variables for default sounds
snd_sfx_gameselect = sfx_nx_system_gameselect
snd_sfx_gamestart = sfx_nx_system_gamestart
snd_sfx_gamedelete = sfx_nx_system_error
font_titles = fnt_nsw_ntlg_24; //Default font for Titles
font_details = fnt_nsw_ntlg_16; //Default font for Details
font_popup = fnt_nsw_udsg_12;   //Default font for Pop-ups
font_clock = fnt_nsw_ntlg_16;   //Default font to be used on the clock
profile_icon = spr_def_profilepicture;  //Default profile picture
init_text = profile_name; //Set init_text as profile name

//3: Load profile picture
if (file_exists_fmns(game_save_id + "_profile.png"))
{
    profile_icon = sprite_add(game_save_id + "_profile.png", 0, false, false, 0, 0);
}

//Clean
cleanmem();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NX Launcher+'s room change save
///Save settings on a .ini file
if (file_exists(game_save_id + '_data.ini'))
{
    ini_open(game_save_id + '_data.ini');
    theme = ini_write_real("Settings", "theme", theme);
    fullscreen = ini_write_real("Settings", "fullscreen", fullscreen);
    language = ini_write_string("Settings", "lang", language);
    discord_enable = ini_write_real("Settings", "discord", discord_enable);
    database_thumbnail = ini_write_real("Settings", "thumb_db", database_thumbnail);
    database_profilepic = ini_write_real("Settings", "profilepic_db", database_profilepic);
    database_wallpaper = ini_write_real("Settings", "wallpaper_db", database_wallpaper);
    update_check = ini_write_real("Launcher Data", "update_check", update_check);
    ini_close();
}

//Clean Memory
cleanmem();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize Settings
///Check if it's a First Run
///If isn't a first run, load settings and profile from .ini file
if (file_exists(game_save_id + '_data.ini'))
{
    ini_open(game_save_id + '_data.ini');
    theme = ini_read_real("Settings", "theme", "0");
    fullscreen = ini_read_real("Settings", "fullscreen", "0");
    language = ini_read_string("Settings", "lang", "en");
    discord_enable = ini_read_real("Settings", "discord", "1");
    database_thumbnail = ini_read_real("Settings", "thumb_db", "0");
    database_profilepic = ini_read_real("Settings", "profilepic_db", "0");
    database_wallpaper = ini_read_real("Settings", "wallpaper_db", "0");
    update_check = ini_read_real("Launcher Data", "update_check", "0");
    profile_name = ini_read_string("User Data", "profile_name", "Guest User");
    ini_close();
}

//Set fullscreen
alarm[4] = 6;

//Center window (if on "Window Mode")
alarm[3] = 2;

//Start Clean Memory
cleanmem_init(0);

//Clean Memory
cleanmem();

//Clean inputs
io_clear();

//Load launcher strings by language
event_user(1);

//Carregar assets
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Profile Page UI
/// ---------- Color Variables ----------
//Black and White (for theme-switching)
c_fx_black = make_colour_rgb(35, 35, 35);
c_fx_white = $f0f0f0
//Blue and Aqua (Cursor)
c_fx_cursor_blue = make_colour_rgb(30, 96, 186);
c_fx_cursor_aqua = make_colour_rgb(0,153,153);
//Blue and Aqua (Normal, Alt. and Names)
c_switchblue = (make_colour_rgb(70,152,200));
c_switchblue_alt = (make_colour_rgb(0,76,153));
c_switchblue_name = (make_colour_rgb(102,178,255));
c_switchaqua = (make_colour_rgb(82,209,202));
c_switchaqua_alt = (make_colour_rgb(0,153,153));
c_switchaqua_name = (make_colour_rgb(0,204,204));
//Blue and Aqua (Merged, useful for effects and names)
c_switchaqua_merge = merge_colour(c_switchaqua, c_switchaqua_alt,col_numb);
c_switchblue_merge = merge_colour(c_switchblue, c_switchblue_alt,col_numb);
c_switchaqua_nmerge = merge_colour(c_switchaqua, c_switchaqua_name,col_numb);
c_switchblue_nmerge = merge_colour(c_switchblue, c_switchblue_name,col_numb);
//Error
c_switcherror = merge_colour(c_red, c_maroon, col_numb);
//Edit Mode
c_switchmove = merge_colour(c_yellow, c_orange, col_numb);

/// ---------- Wallpaper ----------
//No wallpaper exists
switch (theme)
{
    case 0:
    draw_background_tiled_ext(bck_lighttheme, 0, 0, 1, 1, c_white, 1);
    break;
    
    case 1:
    draw_background_tiled_ext(bck_darktheme, 0, 0, 1, 1, c_white, 1);
    break;
}

/// ---------- Controller and Keyboard UI ----------
//Draw the profile picture
if !(surface_exists(profile_surf))
{
    profile_surf = surface_create(64, 64);
}
surface_set_target(profile_surf)
draw_sprite(spr_shp_profilemimage_small, 0, sprite_xoffset, sprite_yoffset)
if (sprite_exists(profile_icon))
{
    draw_set_color_write_enable(1, 1, 1, 0)
    draw_sprite_stretched(profile_icon, 0, 0, 0, 64, 64)
    draw_set_color_write_enable(1, 1, 1, 1)
}

surface_reset_target();
draw_surface(profile_surf, 16, 32);
draw_set_font(font_titles);
switch (theme)
{
    case 0:
    draw_text_colour(96, 43, profile_name + "'s Page", c_black, c_black, c_black, c_black, 1);
    break;
    
    case 1:
    draw_text_colour(96, 43, profile_name + "'s Page", c_white, c_white, c_white, c_white, 1);
    break;
}

//Categories
draw_set_font(font_details);
if (category == "profile")
{
    if (theme == 0)
    {
        draw_sprite_ext(spr_default_selector, 0, 32, (menupos + (menuoffset * 0)), 1, 1, 0, c_switchaqua_merge, 1);
        draw_text_colour(85, ((menupos + 25) + (menuoffset * 0) - 7), "Profile",c_black,c_black,c_black,c_black,1);
        
    }
    else
    {
        draw_sprite_ext(spr_default_selector, 0, 32, (menupos + (menuoffset * 0)), 1, 1, 0, c_switchblue_merge, 1);
        draw_text_colour(85, ((menupos + 25) + (menuoffset * 0) - 7), "Profile",c_white,c_white,c_white,c_white,1);
    }
}
else
{
    if (theme == 0)
    {
        draw_text_colour(85, ((menupos + 25) + (menuoffset * 0) - 7), "Profile",c_black,c_black,c_black,c_black,1);
    }
    else
    {
        draw_text_colour(85, ((menupos + 25) + (menuoffset * 0) - 7), "Profile",c_white,c_white,c_white,c_white,1);
    }
}


if (category == "database")
{
    if (theme == 0)
    {
        draw_sprite_ext(spr_default_selector, 0, 32, (menupos + (menuoffset * 1)), 1, 1, 0, c_switchaqua_merge, 1);
        draw_text_colour(85, ((menupos + 25) + (menuoffset * 1) - 7), "Discord",c_black,c_black,c_black,c_black,1);
    }
    else
    {
        draw_sprite_ext(spr_default_selector, 0, 32, (menupos + (menuoffset * 1)), 1, 1, 0, c_switchblue_merge, 1);
        draw_text_colour(85, ((menupos + 25) + (menuoffset * 1) - 7), "Discord",c_white,c_white,c_white,c_white,1);
    }
}
else
{
    if (theme == 0)
    {
        draw_text_colour(85, ((menupos + 25) + (menuoffset * 1) - 7), "Discord",c_black,c_black,c_black,c_black,1);
    }
    else
    {
        draw_text_colour(85, ((menupos + 25) + (menuoffset * 1) - 7), "Discord",c_white,c_white,c_white,c_white,1);
    }
}



//Draw profile category
if (category == "profile")
{
    if !(surface_exists(surf))
    {
        surf = surface_create(256, 256);
    }
    surface_set_target(surf)
    draw_sprite(spr_shp_profileimage_big, 0, sprite_xoffset, sprite_yoffset)
    if (sprite_exists(profile_icon))
    {
        draw_set_color_write_enable(1, 1, 1, 0)
        draw_sprite_stretched(profile_icon, 0, 0, 0, 256, 256)
        draw_set_color_write_enable(1, 1, 1, 1)
    }
    surface_reset_target();
    draw_surface(surf, x - sprite_xoffset, y - sprite_yoffset)
    
    //Draw highlight
    if (point_in_rectangle(mouse_x, mouse_y, 464, 160, 464+256, 160+256))
    {
        draw_set_font(fnt_nsw_udsg_18);
        if (theme == 0)
        {
            draw_sprite_ext(spr_shp_profileimage_outline_big, 0, 464 - 5, 160 - 5, 1, 1, 0, c_switchaqua_merge, 1);
            draw_text_colour(464+256+16, 160 + 24 + 24, "Change profile picture", c_switchaqua_merge, c_switchaqua_merge, c_switchaqua_merge, c_switchaqua_merge, 1);
        }
        else
        {
            draw_sprite_ext(spr_shp_profileimage_outline_big, 0, 464 - 5, 160 - 5, 1, 1, 0, c_switchblue_merge, 1);
            draw_text_colour(464+256+16, 160 + 24 + 24, "Change profile picture", c_switchblue_merge, c_switchblue_merge, c_switchblue_merge, c_switchblue_merge, 1);
        }
    }
    else
    {
        draw_set_colour(make_colour_rgb(35, 35, 35));
        draw_set_font(fnt_nsw_udsg_18);
        if (theme == 0)
        {
            draw_text_colour(464+256+16, 160 + 24 + 24, "Change profile picture", c_black, c_black, c_black, c_black, 1);
        }
        else
        {
            draw_text_colour(464+256+16, 160 + 24 + 24, "Change profile picture", c_white, c_white, c_white, c_white, 1);
        }
    }
    
    //D
    draw_set_font(font_titles)
    switch (theme)
    {
        case 0:
        draw_text_colour(464+256+16, 160, "Profile picture", c_black, c_black, c_black, c_black, 1);
        break;
        
        case 1:
        draw_text_colour(464+256+16, 160, "Profile picture", c_white, c_white, c_white, c_white, 1);
        break;
    }
    
    //Draw the text box
    draw_set_font(font_titles)
    switch (theme)
    {
        case 0:
        draw_text_colour(464, 448, "Profile name", c_black, c_black, c_black, c_black, 1);
        break;
        
        case 1:
        draw_text_colour(464, 448, "Profile name", c_white, c_white, c_white, c_white, 1);
        break;
    }
    draw_sprite_ext(spr_def_textbox, 0, 464, 492, 1, 1, 0, c_white, 1);
    draw_set_font(fnt_nsw_udsg_12)
    switch (theme)
    {
        case 0:
        draw_text_colour(470, 494, init_text, c_black, c_black, c_black, c_black, 1);
        break;
        
        case 1:
        draw_text_colour(470, 494, init_text, c_white, c_white, c_white, c_white, 1);
        break;
    }
    
}

/// ---------- Filter ----------
//Fundo
if(dialog != 0)
{
    switch (theme)
    {
        case 0:
        draw_set_colour(c_fx_white);
        break;
        
        case 1:
        draw_set_colour(c_fx_black);
        break;
    }
    draw_set_alpha(0.9);
    draw_rectangle(dialog_filterleft,-3000,dialog_filterright,720+3000,0);
    draw_set_colour(c_white);
    draw_set_alpha(1);
};

//Alterar titulo do jogo
if(dialog != 0){

    var dg_offset;
    if(dialog == 1)
        dg_offset = 0;
    else
        dg_offset = 194;
         
    //Descrição
    switch (theme)
    {
        case 0:
        draw_set_colour(c_switchaqua_merge);
        break;
        
        case 1:
        draw_set_colour(c_switchblue_merge);
        break;
    }
    draw_set_halign(fa_center);
    draw_text(1280/2,(720/2-48)+dg_offset,dialog_description+" ("+string(string_length(dialog_return))+"/32)");
        
    //Texto
    if(theme == 1)
        draw_set_colour(c_white);
    else
        draw_set_colour(c_black);
    draw_text(1280/2,(720/2)+dg_offset,dialog_return+dialog_inputb);
    draw_set_halign(fa_left);
    draw_set_colour(c_white);
};

//Deletando...
if(alarm[10] != -1){

    //Fundo
    if(theme == 0)
        draw_set_colour(c_white);
    else
        draw_set_colour(c_black);
    draw_set_alpha(0.7);
    draw_rectangle(-3000,-3000,1280+3000,720+3000,0);
    draw_set_alpha(1);
    draw_set_colour(c_white);
    
    //Texto
    draw_set_colour(c_red);
    draw_set_halign(fa_center);
    draw_text(1280/2,(720/2)-32,"Deleting...");
    draw_set_halign(fa_left);
    draw_set_colour(c_white);
};


//Screen filter (when not using the launcher)
if!(window_has_focus())
&amp;&amp;!(window_get_fullscreen()){

    draw_set_colour(c_black);
    draw_set_alpha(0.7);
    draw_rectangle(0,0,1280,720,0);
    draw_set_alpha(1);
    draw_set_colour(c_white);
};


/// ---------- Cursor ----------


//Draw cursor
window_set_cursor(cr_none);
switch (theme)
{
    case 0:
    draw_sprite_ext(spr_fus_cursor, 0, mouse_x, mouse_y, 1, 1, 0, make_colour_rgb(26, 223, 179), 1);
    break;
    
    case 1:
    draw_sprite_ext(spr_fus_cursor, 0, mouse_x, mouse_y, 1, 1, 0, make_colour_rgb(51, 153, 255), 1);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
