<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicialização do gerenciador de jogos
//Carregador de dados
ini_open('launcher_data.ini');
global.Game1Name = ini_read_string('Game 1', 'Name', '');
global.Game2Name = ini_read_string('Game 2', 'Name', '');
global.Game3Name = ini_read_string('Game 3', 'Name', '');
global.Game4Name = ini_read_string('Game 4', 'Name', '');
global.Game5Name = ini_read_string('Game 5', 'Name', '');
global.Game6Name = ini_read_string('Game 6', 'Name', '');
ini_close();

//Indexador de lista
global.option = 0;
global.maxOption = 5;

_x = view_xview[0] + 32;
_y = view_yview[0] + 96;

//Indexador de jogos
global.GameName[0] = global.Game1Name
global.GameName[1] = global.Game2Name
global.GameName[2] = global.Game3Name
global.GameName[3] = global.Game4Name
global.GameName[4] = global.Game5Name
global.GameName[5] = global.Game6Name

//Variável de Tema
global.theme = 0
global.lightcolor = make_colour_rgb(0, 195, 201);
global.darkcolor = make_colour_rgb(34, 148, 255);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch global.theme
{
    case 0: background_index[0] = bg_lightmode; break;
    case 1: background_index[0] = bg_darkmode; break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Discord | Rich Presence - Encerrar RPC
discord_free_app();
discord_free_dll();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Carregador de perfil (via .ini)
ini_open('launcher_data.ini');
ProfileName = ini_read_string("Profile Data", "Profile Name", "NX");
ProfilePic = ini_read_string("Profile Data", "Profile Pic", "null");
ProfilePicImage = sprite_add(ProfilePic, 1, false, false, 0, 0);
ini_close();

//Discord | Rich Presence - Inicializador
discord_init_dll();
discord_init_app("529764804177690655");
discord_update_presence("v1.0.0b","Nintendo Switch Edition","nxlauncher_default","");

//Centralizar janela
window_center();

//Tocar SFX
audio_play_sfx(sfx_nxopen);

//Dar foco a janela
window_has_focus();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desenhar UI dos jogos
//Modo Claro
if (global.theme == 0)
{
    //Configuração da fonte
    draw_set_font(fnt_nintendoswitch_medium_bold)

    //Draw game titles
    draw_set_colour(global.lightcolor)
    switch global.option
    {
        case 0:
            draw_text(_x, _y, global.GameName[0])
        break;
    
        case 1:
            draw_text(_x, _y, global.GameName[1])
        break;
        
        case 2:
            draw_text(_x, _y, global.GameName[2])
        break;
    
        case 3:
            draw_text(_x, _y, global.GameName[3])
        break;
        
        case 4:
            draw_text(_x, _y, global.GameName[4])
        break;
    
        case 5:
            draw_text(_x, _y, global.GameName[5])
        break;
    }
}

if (global.theme == 1)
{
    //Font setup
    draw_set_font(fnt_nintendoswitch_medium_bold)

    //Draw game titles
    draw_set_colour(global.darkcolor)
    switch global.option
    {
        case 0:
            draw_text(_x, _y, global.GameName[0])
        break;
    
        case 1:
            draw_text(_x, _y, global.GameName[1])
        break;
        
        case 2:
            draw_text(_x, _y, global.GameName[2])
        break;
    
        case 3:
            draw_text(_x, _y, global.GameName[3])
        break;
        
        case 4:
            draw_text(_x, _y, global.GameName[4])
        break;
    
        case 5:
            draw_text(_x, _y, global.GameName[5])
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desenhar UI
//Botões principais da UI
obj_btn_messages.x = view_xview[0] + 224; obj_btn_messages.y = view_yview[0] + 368;
obj_btn_store.x = view_xview[0] + 288; obj_btn_store.y = view_yview[0] + 368;
obj_btn_gallery.x = view_xview[0] + 352; obj_btn_gallery.y = view_yview[0] + 368;
obj_btn_nofunction.x = view_xview[0] + 416; obj_btn_nofunction.y = view_yview[0] + 368;
obj_btn_settings.x = view_xview[0] + 480; obj_btn_settings.y = view_yview[0] + 368;
obj_btn_power.x = view_xview[0] + 544; obj_btn_power.y = view_yview[0] + 368;

//Light Mode
if (global.theme == 0)
{
    //Data e hora
    var HourTime = string_replace_all(string_format(current_hour,2,0)," ","0");
    var MinuteTime = string_replace_all(string_format(current_minute,2,0)," ","0");
    draw_set_colour(c_black);
    draw_set_font(fnt_nintendoswitch_medium_bold);
    draw_text(view_xview[0] + 680, view_yview[0] + 20, HourTime + ":" + MinuteTime);
    
    //Draw Switch buttons and text
    draw_set_font(fnt_nintendoswitch_small_bold);
    draw_set_color(c_black);
    draw_text(view_xview[0] + 736, view_yview[0] + 455, "Start");
    
    //Desenhar perfil
    draw_sprite(ProfilePicImage, 0, view_xview[0] + 8, view_yview[0] + 8);
    draw_set_font(fnt_nintendoswitch_medium_bold);
    draw_set_colour(global.lightcolor);
    draw_text(view_xview[0] + 64, view_yview[0] + 20, ProfileName);
    
    //Draw network connection
    if os_is_network_connected()
    {
        draw_sprite(icn_networkconnection, 0, view_xview[0] + 752, view_yview[0] + 25);
    }
    else if not os_is_network_connected()
    {
        draw_sprite(icn_networkconnection, 2, view_xview[0] + 752, view_yview[0] + 25);
    }
    
    //Draw line
    draw_set_colour(c_black);
    draw_line(view_xview[0] + 8, view_yview[0] + 448, view_xview[0] + 784, view_yview[0] + 448);

    //Draw input method
    if gamepad_is_connected(4)
    {
        draw_sprite(icn_confirm_button, 0, view_xview[0] + 716, view_yview[0] + 455)
    }
    else if not gamepad_is_connected(4)
    {
        draw_sprite(icn_confirm_button, 1, view_xview[0] + 716, view_yview[0] + 455)
    }
    if gamepad_is_connected(4)
    {
        draw_sprite(icn_input_type, 1, view_xview[0] + 16, view_yview[0] + 455)
    }
    else if not gamepad_is_connected(4)
    {
        draw_sprite(icn_input_type, 0, view_xview[0] + 16, view_yview[0] + 455)
    }
}

//Dark Mode
if (global.theme == 1)
{
    //Data e hora
    var HourTime = string_replace_all(string_format(current_hour,2,0)," ","0");
    var MinuteTime = string_replace_all(string_format(current_minute,2,0)," ","0");
    draw_set_colour(c_white);
    draw_set_font(fnt_nintendoswitch_medium_bold);
    draw_text(view_xview[0] + 680, view_yview[0] + 20, HourTime + ":" + MinuteTime);
    
    //Draw Switch buttons and text
    draw_set_font(fnt_nintendoswitch_small_bold);
    draw_set_color(c_white);
    draw_text(view_xview[0] + 736, view_yview[0] + 455, "Start");
    
    //Desenhar perfil
    draw_sprite(ProfilePicImage, 0, view_xview[0] + 8, view_yview[0] + 8);
    draw_set_font(fnt_nintendoswitch_medium_bold);
    draw_set_colour(global.darkcolor);
    draw_text(view_xview[0] + 64, view_yview[0] + 20, ProfileName);
    
    //Draw network connection
    if os_is_network_connected()
    {
        draw_sprite(icn_networkconnection, 1, view_xview[0] + 752, view_yview[0] + 25);
    }
    else if not os_is_network_connected()
    {
        draw_sprite(icn_networkconnection, 3, view_xview[0] + 752, view_yview[0] + 25);
    }
    
    //Draw line
    draw_set_colour(c_white);
    draw_line(view_xview[0] + 8, view_yview[0] + 448, view_xview[0] + 784, view_yview[0] + 448);

    //Draw input method
    if gamepad_is_connected(4)
    {
        draw_sprite(icn_confirm_button, 2, view_xview[0] + 716, view_yview[0] + 455)
    }
    else if not gamepad_is_connected(4)
    {
        draw_sprite(icn_confirm_button, 3, view_xview[0] + 716, view_yview[0] + 455)
    }
    if gamepad_is_connected(4)
    {
        draw_sprite(icn_input_type, 3, view_xview[0] + 16, view_yview[0] + 455)
    }
    else if not gamepad_is_connected(4)
    {
        draw_sprite(icn_input_type, 2, view_xview[0] + 16, view_yview[0] + 455)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="123">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Screenshots
NX_Screenshot = get_save_filename_ext("Screenshot do NX Launcher+ | *.png", "nx_snapshot_" + string(choose(0,1,2,3,4,5,6,7,8,9)) + string(choose(1,2,3,4,5,6,7,8,9)) + string(choose(2,3,4,5,6,7,8,9)), working_directory, "Save a snapshot of NX Launcher");
if NX_Screenshot != ""
{
    screen_save(NX_Screenshot);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="121">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sistema de troca de temas
if (global.theme = 0)
{
    global.theme = 1
}
else if (global.theme = 1)
{
    global.theme = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
