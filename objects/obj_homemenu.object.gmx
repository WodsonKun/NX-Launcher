<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
is_playing = 0;
delay = 0;
nav_time = 60;
offset = 224;
offset_v = 32;
info_popup = 0;
boot_res = "/max";
boot_wait = "/WAIT";
boot_attach = "";
profile_surf = -1;

///Mover
move = 0;
move_origin = -1;
move_temp_title = "";
move_temp_path = "";
move_temp_shortcut = 1;
move_temp_thumbnail = noone;

///Controle dos Pais
parental_offset = 0;
parental_unlock = 0;
parental_fade = 3;
parental_fadeicons = 1;

///In-launcher dialog
dialog = 0;
dialog_description = "";
dialog_return = "";
dialog_inputb = " ";
dialog_filterleft = 1280;
dialog_filterright = 1280;

///Selector's main base colors
col_numb = 0;
col_mod = 0;

///Create a variable to access "User", Fenix Launcher and both "Local" and "Roaming" AppData folders
global.userdir = environment_get_variable("USERPROFILE");
global.launcherdir = global.userdir + "\NX_Launcher_Plus"
global.local_appdatadir = global.userdir + "\AppData\Local"
global.roaming_appdatadir = global.userdir + "\AppData\Roaming"
global.appdata_launcherdir = global.local_appdatadir + "\NX_Launcher_"
global.launcher_coredir = working_directory + "\core"

///Create a variable to access Fenix Launcher's Public GitHub Database server
global.db_server = "https://raw.githubusercontent.com/WodsonKun/Fenix_Database/master"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_released(vk_f10))
{
    theme = !theme;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load assets (Titles, custom theme and song)
// ---------- Custom Theme ----------
ini_open(game_save_id + "custom_theme\_theme.ini");
theme = real(ini_read_string("NX_THEME", "theme", "1"));
custom_bg_path = ini_read_string("NX_THEME", "custom_bg_path", string(game_save_id + "custom_theme\_wallpaper.png"))
custom_details_font = ini_read_string("NX_THEME", "custom_details_font", string(game_save_id + "custom_theme\fonts\thm_details.ttf"))
custom_titles_font = ini_read_string("NX_THEME", "custom_titles_font", string(game_save_id + "custom_theme\fonts\thm_titles.ttf"))
ini_close();

///Song (first load)
wallpaper_song = audio_create_stream(global.launcher_coredir + "\dummy.aud");

///Set default values
custom_bg = noone;
profile_icon = spr_def_profilepicture;

///Load custom wallpaper and profile picture
//Wallpaper (custom_theme\_wallpaper.png)
if (file_exists_fmns(game_save_id + "custom_theme\_wallpaper.png"))
{
    custom_bg = sprite_add(game_save_id + "custom_theme\_wallpaper.png", 0, false, false, 0, 0);
}

//Profile Picture (_profile.png)
if (file_exists_fmns(game_save_id + "_profile.png"))
{
    profile_icon = sprite_add(game_save_id + "_profile.png", 0, false, false, 0, 0);
}

///Song
instance_create(0, 0, obj_musicplayer);

///Fonts
//Set font variables
font_titles = fnt_nsw_ntlg_24;
font_details = fnt_nsw_udsg_12;
font_popup = fnt_nsw_udsg_12;
font_clock = fnt_nsw_ntlg_16;

//Titles
if (file_exists_fmns(game_save_id + "custom_theme\fonts\thm_titles.ttf"))
{
    font_titles = font_add(custom_titles_font, 24, false, false, 32, 255)
}

//Details
if (file_exists_fmns(game_save_id + "custom_theme\fonts\thm_details.ttf"))
{
    font_details = font_add(custom_details_font, 18, false, false, 32, 255)
}

///Sound effects
if (file_exists_fmns(game_save_id + "custom_theme\fonts\thm_details.ttf"))
{
    snd_sfx_gameselect = audio_create_stream(game_save_id + "custom_theme\sounds\thm_sfx_select.wav")
}

/// ---------- Titles ----------
//Search total amount of titles
games_total = 0;
ini_open(game_save_id + "title_collection\_total.ini");
games_total = real(ini_read_string("NX_TITLE", "total", "0"));
ini_close();

//List
var i;
for(i = 0; i &lt; games_total; i += 1)
{
    //Load titles's details
    ini_open(game_save_id + "title_collection\game_" + string(i) + ".ini");
    games_title[i] = ini_read_string("NX_TITLE","title","???");
    games_path[i] = ini_read_string("NX_TITLE","path","");
    games_rom[i] = ini_read_string("NX_TITLE","rom","");
    games_subselect[i] = real(ini_read_string("NX_TITLE","subselect","1"));
    games_shortcut[i] = real(ini_read_string("NX_TITLE","shortcut","0"));
    games_animframes[i] = real(ini_read_string("NX_TITLE","animframes","1"));
    games_animspeed[i] = real(ini_read_string("NX_TITLE","animspeed","0"));
    games_playtime[i, 0] = real(base64_decode(ini_read_string("NX_TITLE","0","0")));
    games_playtime[i, 1] = real(base64_decode(ini_read_string("NX_TITLE","1","0")));
    
    //Load titles's thumbnails
    if(file_exists_fmns(game_save_id + "\title_collection\game_" + string(i) + ".png"))
    {
        games_thumb[i] = sprite_add(game_save_id + "\title_collection\game_" + string(i) + ".png", games_animframes[i], 0, 1, 0, 0);
    }
    else
    {
        games_thumb[i] = sprite_add(global.launcher_coredir + "\default.tbn",0,0,0,0,0);
    }
    ini_close();
};

//Animator
anim_games[i] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Discord RPC padr√£o
if (games_total == 0)
{
    discord_update_presence("üìï | You don't have any game or application!","üè† | HOME Menu","icn_nx_launcher","icn_nx_launcher_home");
}
else if (games_total == 1)
{
    discord_update_presence("üìï | You just have one game/application","üè† | HOME Menu","icn_nx_launcher","icn_nx_launcher_home");
}
else if (games_total &gt; 1)
{
    discord_update_presence("üìï | Choosing between " + string(games_total) + " applications and games","üè† | HOME Menu","icn_nx_launcher","icn_nx_launcher_home");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End the HOME MENU
ini_open(game_save_id + '_data.ini');
select_index = ini_write_real("Launcher Data", "position", "0");
ini_close();

//Free the surface that draws the profile picture
surface_free(profile_surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the HOME Menu
///Load settings
ini_open(game_save_id + '_data.ini');
theme = ini_read_real("Settings", "theme", "0");
fullscreen = ini_read_real("Settings", "fullscreen", "0");
language = ini_read_real("Settings", "lang", "en");
discord_rpc = ini_read_real("Settings", "discord", "0");
database_thumbnail = ini_read_real("Settings", "thumb_db", "0");
database_profilepic = ini_read_real("Settings", "profilepic_db", "0");
database_wallpaper = ini_read_real("Settings", "wallpaper_db", "0");
update_check = ini_read_real("Launcher Data", "update_check", "0");
select_index = ini_read_real("Launcher Data", "position", "0");
profile_name = ini_read_string("User Data", "profile_name", "Guest User");
ini_close();

//Load custom assets
event_user(15);

//Impedir seletor de come√ßar fora da lista
if(select_index &gt; games_total-1){

    if(games_total == 0)
        select_index = 0
    else
        select_index = games_total-1;
};

//Discord's RPC Initializer
if (discord_rpc == 1)
{
    discord_init_dll();
    discord_init_app("518968328744861704");
    discord_update_presence("","","","");
}

//Set RPC status
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the launcher's interface
/// ---------- Color Variables ----------
//Black and White (for theme-switching)
c_fx_black = make_colour_rgb(35, 35, 35);
c_fx_white = $f0f0f0
//Blue and Aqua (Cursor)
c_fx_cursor_blue = make_colour_rgb(30, 96, 186);
c_fx_cursor_aqua = make_colour_rgb(0,153,153);
//Blue and Aqua (Normal, Alt. and Names)
c_switchblue = (make_colour_rgb(70,152,200));
c_switchblue_alt = (make_colour_rgb(0,76,153));
c_switchblue_name = (make_colour_rgb(102,178,255));
c_switchaqua = (make_colour_rgb(82,209,202));
c_switchaqua_alt = (make_colour_rgb(0,153,153));
c_switchaqua_name = (make_colour_rgb(0,204,204));
//Blue and Aqua (Merged, useful for effects and names)
c_switchaqua_merge = merge_colour(c_switchaqua, c_switchaqua_alt,col_numb);
c_switchblue_merge = merge_colour(c_switchblue, c_switchblue_alt,col_numb);
c_switchaqua_nmerge = merge_colour(c_switchaqua, c_switchaqua_name,col_numb);
c_switchblue_nmerge = merge_colour(c_switchblue, c_switchblue_name,col_numb);
//Error
c_switcherror = merge_colour(c_red, c_maroon, col_numb);
//Edit Mode
c_switchmove = merge_colour(c_yellow, c_orange, col_numb);

//Draw sidebar
switch (theme)
{
    case 0:
    draw_rectangle_colour(0, 0, 96, 720, make_colour_rgb(255, 255, 255), make_colour_rgb(255, 255, 255), make_colour_rgb(255, 255, 255), make_colour_rgb(255, 255, 255), false);
    break;
    
    case 1:
    draw_rectangle_colour(0, 0, 96, 720, make_colour_rgb(20, 20, 20), make_colour_rgb(20, 20, 20), make_colour_rgb(20, 20, 20), make_colour_rgb(20, 20, 20), false);
    break;
}

//Draw the profile picture
if !(surface_exists(profile_surf))
{
    profile_surf = surface_create(64, 64);
}
surface_set_target(profile_surf)
draw_sprite(spr_shp_profilemimage_small, 0, sprite_xoffset, sprite_yoffset)
if (sprite_exists(profile_icon))
{
    draw_set_color_write_enable(1, 1, 1, 0)
    draw_sprite_stretched(profile_icon, 0, 0, 0, 64, 64)
    draw_set_color_write_enable(1, 1, 1, 1)
}

surface_reset_target();
draw_surface(profile_surf, 16, 16)

//Draw the buttons
draw_sprite_ext(spr_nsw_system_icons, 0, 24, 176, 0.5, 0.5, 0, make_colour_rgb(255, 0, 0), 1);
draw_sprite_ext(spr_nsw_system_icons, 1, 24, 272, 0.5, 0.5, 0, make_colour_rgb(255, 128, 0), 1);
draw_sprite_ext(spr_nsw_system_icons, 2, 24, 368, 0.5, 0.5, 0, make_colour_rgb(0, 128, 255), 1);
switch (theme)
{
    case 0:
    draw_sprite_ext(spr_nsw_system_icons, 3, 24, 464, 0.5, 0.5, 0, make_colour_rgb(35, 35, 35), 1)
    draw_sprite_ext(spr_nsw_system_icons, 4, 24, 560, 0.5, 0.5, 0, make_colour_rgb(35, 35, 35), 1)
    break;
    
    case 1:
    draw_sprite_ext(spr_nsw_system_icons, 3, 24, 464, 0.5, 0.5, 0, make_colour_rgb(235, 235, 235), 1)
    draw_sprite_ext(spr_nsw_system_icons, 4, 24, 560, 0.5, 0.5, 0, make_colour_rgb(235, 235, 235), 1)
    break;
}

/// ---------- Game List UI ----------
//Rolagem (de acordo com offset)
draw_set_font(font_titles)
if(select_index &gt; 1)
    offset = 502+(-276*select_index);
else
    offset = 98;

//Lista de jogos (Mostrar apenas o que esta na tela)
var i, i_start, i_end;
if(select_index &gt; 1){

    i_start = select_index-2;
    i_end = select_index+3;
};
else{

    i_start = 0;
    i_end = select_index+5;
}; for(i=i_start; i&lt;i_end; i+=1){

    var vv = 0;
    if(select_index == i)
        vv = offset_v = -2;
                
    //Sombra
    draw_sprite(spr_gamelist_shadow,theme,85+offset+(256+20)*i,235-vv);
    
    //Blocos v√°zios
    if(i &gt; games_total-1)
    ||((move == 1)&amp;&amp;(i == move_origin))
        draw_sprite(spr_gamelist_thumbnail,theme,85+offset+(256+20)*i,235-vv);
    //Thumbnail dos jogos
    else
    {
        if(sprite_exists(games_thumb[i]))
        &amp;&amp;(games_total &gt; 0)
        {
            draw_sprite_stretched(games_thumb[i],0,85+offset+(256+20)*i,235-vv,256,256);
        }
        else
        {
            draw_sprite_stretched(global.launcher_coredir + "default.tbn",0,85+offset+(256+20)*i,235-vv,256,256);
        }
    };
};
    
//Seletor de jogos
if(select_index &lt; games_total+1)
&amp;&amp;(games_total &gt; 0)
{
    var _msg;
    
    //Mover
    if(move == 1)
    {
        _msg = games_title[move_origin];
    };
    else
    {
        //Padr√£o
        if(file_exists_fmns(games_path[select_index]))
        {
            _msg = games_title[select_index];
        };
        //Jogo n√£o encotrado
        else
        {
            _msg = "[Game not found]";
        };
    };

    //Mostrar thumbnail que esta sendo movida
    var move_offset = 0;
    if(move == 1)
    {
        move_offset = 32;
        if(sprite_exists(games_thumb[move_origin]))
        {
            draw_set_alpha(col_numb+0.4);
            draw_sprite_stretched(games_thumb[move_origin],0,85+(offset-0)+276*select_index,236-32-2,256,256);
            draw_set_alpha(1);
        };
    };
    
    //Seletor
    offset_v = 0;
    switch (theme)
    {
        case 1:
        draw_sprite_ext(spr_gamelist_selector,0,85+(offset-10)+276*select_index,224-offset_v-move_offset,1,1,0,c_switchblue_merge,1);
        break;
        
        case 0:
        draw_sprite_ext(spr_gamelist_selector,0,85+(offset-10)+276*select_index,224-offset_v-move_offset,1,1,0,c_switchaqua_merge,1);
        break;
    }
    if (move == 1)
    {
        draw_sprite_ext(spr_gamelist_selector,0,85+(offset-10)+276*select_index,224-offset_v-move_offset,1,1,0,c_switchmove,1);
    }
    if !(file_exists_fmns(games_path[select_index]))
    {
        draw_sprite_ext(spr_gamelist_selector,0,85+(offset-10)+276*select_index,224-offset_v-move_offset,1,1,0,c_switcherror,1);
    }
    
    //Nome do jogo selecionado
    if(select_index == 0)
    {
        switch (theme)
        {
            case 1:
            draw_text_colour(85+offset-16,164-offset_v-move_offset,_msg,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,1);
            break;
            
            case 0:
            draw_text_colour(85+offset-16,164-offset_v-move_offset,_msg,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,1);
            break;
        }
        if (move == 1)
        {
            draw_text_colour(85+offset-16,164-offset_v-move_offset,_msg,c_switchmove,c_switchmove,c_switchmove,c_switchmove,1);
        }
        if !(file_exists_fmns(games_path[select_index]))
        {
            draw_text_colour(85+offset-16,164-offset_v-move_offset,_msg,c_switcherror,c_switcherror,c_switcherror,c_switcherror,1);
        }
    }
    else
    {
        draw_set_halign(fa_center);
        switch (theme)
        {
            case 1:
            draw_text_colour(85+offset+(276*select_index)+256/2,164-offset_v-move_offset,_msg,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,1);
            break;
            
            case 0:
            draw_text_colour(85+offset+(276*select_index)+256/2,164-offset_v-move_offset,_msg,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,1);
            break;
        }
        if (move == 1)
        {
            draw_text_colour(85+offset+(276*select_index)+256/2,164-offset_v-move_offset,_msg,c_switchmove,c_switchmove,c_switchmove,c_switchmove,1);
        }
        if !(file_exists_fmns(games_path[select_index]))
        {
            draw_text_colour(85+offset+(276*select_index)+256/2,164-offset_v-move_offset,_msg,c_switcherror,c_switcherror,c_switcherror,c_switcherror,1);
        }
        draw_set_halign(fa_left);
        
        if(move == 0)
        {
            if(games_shortcut[select_index] == 1)
            {
                draw_sprite_ext(spr_gamelist_shortcut_icon,theme,(85+offset+(276*select_index)+(256/2)-116),443+parental_offset-offset_v,1,1,0,c_white,1);
            }
        }
    };
};

//Draw controller type and buttons
if (gamepad_is_connected(0)) || (gamepad_is_connected(4))
{
    //Draw the controller being used
    switch (theme)
    {
        case 0:
        draw_sprite_ext(spr_nsw_device_icons, 0, 112, 640, 0.5, 0.5, 0, make_colour_rgb(35, 35, 35), 1);
        break;
        
        case 1:
        draw_sprite_ext(spr_nsw_device_icons, 0, 112, 640, 0.5, 0.5, 0, make_colour_rgb(235, 235, 235), 1);
        break;
    }
    
    //Draw the buttons
    switch (theme)
    {
        case 0:
        if (games_total &gt; 0)
        {
            draw_set_font(fnt_nsw_udsg_18);
            
            //Move
            draw_sprite_ext(spr_kbd_buttons, 2, 1120/2, 650, 0.5, 0.5, 0, make_colour_rgb(35, 35, 35), 1);
            draw_text_colour(1178, 655, "Move Around", make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), 1);
            
            //Edit Mode
            draw_sprite_ext(spr_kbd_buttons, 1, 1120/1.5, 650, 0.5, 0.5, 0, make_colour_rgb(35, 35, 35), 1);
            draw_text_colour(1178, 655, "Edit Mode", make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), 1);
            
            //Start
            draw_sprite_ext(spr_kbd_buttons, 0, 1120, 650, 0.5, 0.5, 0, make_colour_rgb(35, 35, 35), 1);
            draw_text_colour(1178, 655, "Start", make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), 1);
        }
        break;
        
        case 1:
        if (games_total &gt; 0)
        {
            draw_set_font(fnt_nsw_udsg_18);
            
            //Move
            draw_sprite_ext(spr_kbd_buttons, 2, (1120/1.65)-28, 650, 0.5, 0.5, 0, make_colour_rgb(235, 235, 235), 1);
            draw_text_colour(1178/1.65, 655, "Move Around", make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), 1);
            
            //Edit Mode
            draw_sprite_ext(spr_kbd_buttons, 1, (1120/1.22)-12, 650, 0.5, 0.5, 0, make_colour_rgb(235, 235, 235), 1);
            draw_text_colour(1178/1.22, 655, "Edit Mode", make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), 1);
            
            //Start
            draw_sprite_ext(spr_kbd_buttons, 0, 1120, 650, 0.5, 0.5, 0, make_colour_rgb(235, 235, 235), 1);
            draw_text_colour(1178, 655, "Start", make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), 1);
        }
        break;
    }
}
else
{
    //Draw the controller being used
    switch (theme)
    {
        case 0:
        draw_sprite_ext(spr_nsw_device_icons, 1, 112, 640, 0.5, 0.5, 0, make_colour_rgb(35, 35, 35), 1);
        break;
        
        case 1:
        draw_sprite_ext(spr_nsw_device_icons, 1, 112, 640, 0.5, 0.5, 0, make_colour_rgb(235, 235, 235), 1);
        break;
    }
    
    //Draw the buttons
    switch (theme)
    {
        case 0:
        if (games_total &gt; 0)
        {
            draw_set_font(fnt_nsw_udsg_18);
            
            //Move
            draw_sprite_ext(spr_ctr_buttons, 2, 1120/2, 650, 0.5, 0.5, 0, make_colour_rgb(35, 35, 35), 1);
            draw_text_colour(1178, 655, "Move Around", make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), 1);
            
            //Edit Mode
            draw_sprite_ext(spr_ctr_buttons, 1, 1120/1.5, 650, 0.5, 0.5, 0, make_colour_rgb(35, 35, 35), 1);
            draw_text_colour(1178, 655, "Edit Mode", make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), 1);
            
            //Start
            draw_sprite_ext(spr_ctr_buttons, 0, 1120, 650, 0.5, 0.5, 0, make_colour_rgb(35, 35, 35), 1);
            draw_text_colour(1178, 655, "Start", make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), make_colour_rgb(35, 35, 35), 1);
        }
        break;
        
        case 1:
        if (games_total &gt; 0)
        {
            draw_set_font(fnt_nsw_udsg_18);
            
            //Move
            draw_sprite_ext(spr_ctr_buttons, 2, (1120/1.65)-28, 650, 0.5, 0.5, 0, make_colour_rgb(235, 235, 235), 1);
            draw_text_colour(1178/1.65, 655, "Move Around", make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), 1);
            
            //Edit Mode
            draw_sprite_ext(spr_ctr_buttons, 1, (1120/1.22)-12, 650, 0.5, 0.5, 0, make_colour_rgb(235, 235, 235), 1);
            draw_text_colour(1178/1.22, 655, "Edit Mode", make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), 1);
            
            //Start
            draw_sprite_ext(spr_ctr_buttons, 0, 1120, 650, 0.5, 0.5, 0, make_colour_rgb(235, 235, 235), 1);
            draw_text_colour(1178, 655, "Start", make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), make_colour_rgb(235, 235, 235), 1);
        }
        break;
    }
}

/// ----- THIS NEEDS TO BE KEPT AT THE END OF THE CODE -----
//Draw cursor
window_set_cursor(cr_none);
switch (theme)
{
    case 0:
    draw_sprite_ext(spr_fus_cursor, 0, mouse_x, mouse_y, 1, 1, 0, make_colour_rgb(26, 223, 179), 1);
    break;
    
    case 1:
    draw_sprite_ext(spr_fus_cursor, 0, mouse_x, mouse_y, 1, 1, 0, make_colour_rgb(51, 153, 255), 1);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw static stuff
//Wallpaper (both Default and Custom)
/// ---------- Wallpaper ----------
//No wallpaper exists
switch (theme)
{
    case 0:
    draw_background_tiled_ext(bck_lighttheme, 0, 0, 1, 1, c_white, 1);
    break;
    
    case 1:
    draw_background_tiled_ext(bck_darktheme, 0, 0, 1, 1, c_white, 1);
    break;
}

//Wallpaper exists
if sprite_exists(custom_bg)
{
    draw_sprite_stretched(custom_bg, 0, 0, 0, 1280, 720);
    //Draw semi-transparent wallpaper
    switch (theme)
    {
        case 0:
        draw_background_tiled_ext(bck_semi_lighttheme, 0, 0, 1, 1, c_white, 1);
        break;
        
        case 1:
        draw_background_tiled_ext(bck_semi_darktheme, 0, 0, 1, 1, c_white, 1);
        break;
    }
}
else
{
    switch (theme)
    {
        case 0:
        draw_background_tiled_ext(bck_lighttheme, 0, 0, 1, 1, c_white, 1);
        break;
        
        case 1:
        draw_background_tiled_ext(bck_darktheme, 0, 0, 1, 1, c_white, 1);
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
