<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variáveis do NX Launcher+
is_playing = 0;
nav_time = 60;
offset = 98;
offset_v = 32;
info_popup = 0;
boot_res = "/max ";

//Mover
move = 0;
move_origin = -1;
move_temp_title = "";
move_temp_path = "";
move_temp_thumbnail = noone;

//Controle dos Pais
parental_offset = 0;
parental_unlock = 0;
parental_fade = 3;
parental_fadeicons = 1;

//Dialogo
dialog = 0;
dialog_description = "";
dialog_return = "";
dialog_inputb = " ";
dialog_filterleft = 1280;
dialog_filterright = 1280;

//Cor do Seletor
col_numb = 0;
col_mod = 0;

//Criador de perfil
ini_open(game_save_id + 'config.ini');
ini_write_string("NX_PROFILE", "profilename", "User");
ini_write_string("NX_PROFILE", "profileicon", game_save_id + "profile.png");
ini_close();
//Mover "profile.png" para pasta de saves
file_copy_fmns(working_directory + "profile.png", game_save_id + "profile.png");
file_delete_fmns(working_directory + "profile.png");

//Mover "undefined.png" para pasta de saves
file_copy_fmns(working_directory + "undefined.png", game_save_id + "undefined.png");
file_delete_fmns(working_directory + "undefined.png");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mover arquivos

//Mover destino para origem...
if(file_exists(game_save_id+"collection\game_"+string(select_index)+".ini")){

    //Mover...
    games_title[move_origin] = games_title[select_index];
    games_path[move_origin] = games_path[select_index];
    games_thumb[move_origin] = sprite_duplicate(games_thumb[select_index]);
    
    //Deletar sprite de destino
    sprite_delete(games_thumb[select_index]);
    
    //Renomear
    file_rename_fmns(game_save_id+"collection\game_"+string(select_index)+".png",game_save_id+"collection\game_"+string(move_origin)+".png");
    file_rename_fmns(game_save_id+"collection\game_"+string(select_index)+".ini",game_save_id+"collection\game_"+string(move_origin)+".ini");

    //Ir para próximo arquivo...
    alarm[11] = 5;
};
//Mover origem (que estava em TMP) para destino...
else{

    //Carregar novos...
    games_title[select_index] = move_temp_title;
    games_path[select_index] = move_temp_path;
    games_thumb[select_index] = sprite_duplicate(move_temp_thumbnail);
    
    //Corrigir nome
    ini_open(game_save_id+"collection\game_"+string(move_origin)+".ini")
    games_title[move_origin] = ini_read_string("NX_TITLE","title","???");
    ini_close();
    
    //Deletar sprite de origem
    sprite_delete(move_temp_thumbnail);
    
    //Renomear
    file_rename_fmns(game_save_id+"collection\game_TMP.png",game_save_id+"collection\game_"+string(select_index)+".png");
    file_rename_fmns(game_save_id+"collection\game_TMP.ini",game_save_id+"collection\game_"+string(select_index)+".ini");

    //SFX
    audio_play_sfx(sfx_nx_notification_general);
    
    //Finalizar
    move = 0;
    move_origin = -1;
    alarm[11] = -1;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Organizar arquivos
if(move_rest &lt; games_total-1){

    //Mover...
    games_title[move_rest] = games_title[move_rest+1];
    games_path[move_rest] = games_path[move_rest+1];
    games_thumb[move_rest] = sprite_duplicate(games_thumb[move_rest+1]);
    file_rename_fmns(game_save_id+"collection\game_"+string(move_rest+1)+".png",game_save_id+"collection\game_"+string(move_rest)+".png");
    file_rename_fmns(game_save_id+"collection\game_"+string(move_rest+1)+".ini",game_save_id+"collection\game_"+string(move_rest)+".ini");

    //Ir para próximo arquivo...
    move_rest++;
    alarm[10] = 5;
};
else{

    //Decrementar
    audio_stop_sound(sfx_nx_notification_general);
    audio_play_sfx(sfx_nx_notification_general);
    games_total--;

    //Salvar total de jogos
    ini_open(game_save_id+"collection\_total.ini");
    ini_write_string("NX_TITLE","total",string(games_total));
    ini_close();

    //Atualizar RPC
    event_user(0);
    
    alarm[10] = -1;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alterar miniatura do Jogo

//Buscar caminho...
var mod_file = get_open_filename("Game Executable (.EXE)|*.exe","");
if(mod_file != ""){

    //SFX
    audio_play_sfx(sfx_nx_notification_general);
    
    //Buscar miniatura...
    var mod_thumb = get_open_filename("Thumbnail (256x256)|*.png;*.jpg","");
    if(mod_thumb != ""){
        
        sprite_delete(games_thumb[select_index])
        file_delete_fmns(game_save_id+"collection\game_"+string(select_index)+".png");
        games_thumb[select_index] = sprite_add(mod_thumb,0,0,1,0,0);
        file_copy_fmns(mod_thumb,game_save_id+"collection\game_"+string(select_index)+".png");
    };
    
    //SFX
    audio_play_sfx(sfx_nx_notification_general);
        
    //Alterar jogo
    games_path[select_index] = mod_file;
                
    //Salvar no diretório
    ini_open(game_save_id+"collection\game_"+string(select_index)+".ini");
    ini_write_string("NX_TITLE","path",string(mod_file));
    ini_close();
            
    //Atualizar RPC
    event_user(0);
    
    //Voltar fullscreen... (Se tiver sido definido antes)    
    window_set_fullscreen(fullscreen);
};
//Voltar fullscreen... (Se tiver sido definido antes)    
else{

    audio_play_sfx(sfx_nx_notification_general);
    window_set_fullscreen(fullscreen);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Buscar caminho...
var file = get_open_filename("Game Executable (.EXE)|*.exe","");
if(file != ""){

    //SFX
    audio_play_sfx(sfx_nx_notification_general);
    
    //Buscar miniatura...
    var thumb = get_open_filename("Thumbnail (256x256)|*.png;*.jpg","");
    if(thumb != ""){
        games_thumb[games_total] = sprite_add(thumb,0,0,1,0,0);
        file_copy(thumb,game_save_id+"collection\game_"+string(games_total)+".png");
    };
    else
        games_thumb[games_total] = sprite_add(game_save_id+"undefined.png",0,0,0,0,0);
    
    //SFX
    audio_play_sfx(sfx_nx_notification_general);
        
    //Adicionar jogo
    games_title[games_total] = string_copy(filename_name(file),0,48);
    games_path[games_total] = file;
                    
    //Salvar no diretório
    ini_open(game_save_id+"collection\game_"+string(games_total)+".ini");
    ini_write_string("NX_TITLE","title",string_copy(filename_name(file),0,48));
    ini_write_string("NX_TITLE","path",string(file));
    ini_close();
            
    //Incrementar total
    ini_open(game_save_id+"collection\_total.ini");
    ini_write_string("NX_TITLE","total",string(games_total+1));
    ini_close();
    games_total++;
    select_index = games_total-1;
  
    //Atualizar RPC
    event_user(0);
    
    //Voltar fullscreen... (Se tiver sido definido antes)    
    window_set_fullscreen(fullscreen);
    
    //Alterar nome
    dialog_description = "Set Game Title:"
    keyboard_string = string_copy(filename_name(file),0,48);
    dialog_return = string_copy(filename_name(file),0,48);
    dialog = 1;
    alarm[6] = 1;
};
//Voltar fullscreen... (Se tiver sido definido antes)    
else{

    audio_play_sfx(sfx_nx_notification_general);
    window_set_fullscreen(fullscreen);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alterar nome do jogo
if(dialog == 1)
    alarm[6] = 1;
else{
   
    //Adicionar jogo
    games_title[select_index] = dialog_return;

    //Salvara alteração
    ini_open(game_save_id+"collection\game_"+string(select_index)+".ini");
    ini_write_string("NX_TITLE","title",string(dialog_return));
    ini_close();
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Efeito do dialogo
if(dialog == 1){

    if(dialog_inputb == " ")
        dialog_inputb = "_";
    else
        dialog_inputb = " ";
    alarm[5] = 15;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Definir fullscreen
//Fullscreen
window_set_fullscreen(fullscreen);

if(fullscreen == 0){

    //Recuperar posição/tamanho
    window_set_position(temp_x,temp_y);
    window_set_size(temp_w,temp_h);
    
    //Centralizar
    alarm[3] = 2;
};
else
    window_set_position(-4000,-4000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Centralizar janela
window_center();

//Lembrar posição/tamanho
temp_x = window_get_x();
temp_y = window_get_y();
temp_w = window_get_width();
temp_h = window_get_height();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Retomar launcher
is_playing = 0;
display_set_ui_visibility(1);

//Dar foco ao launcher
window_has_focus();

//SFX
audio_play_sfx(sfx_nx_system_init);

//Recuperar posição/tamanho
alarm[4] = 2;

//Deletar .BAT
file_delete_fmns(game_save_id+"gameboot.bat");

//Atualizar RPC
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Iniciar jogo

//Executar .BAT (E aguardar execução ser finalizada...)
execute_shell('"'+game_save_id+'gameboot.bat"',1,1);

//Após jogo finalizado...
alarm[2] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Preparar para iniciar jogo
is_playing = 1;
display_set_ui_visibility(0);

//Lembrar posição/tamanho
if(fullscreen == 0){

    temp_x = window_get_x();
    temp_y = window_get_y();
    temp_w = window_get_width();
    temp_h = window_get_height();
};

//Definir posição/tamanho
window_set_position(-4000,-4000);
window_set_size(16,16);

//Discord RPC
discord_update_presence("","🎮 | "+string(games_title[select_index]),"icn_nx_launcher","");

//Criar .BAT direcionado ao local do jogo (evita falhas)
var test = file_text_open_write(game_save_id+"gameboot.bat")
file_text_write_string(test,filename_drive(games_path[select_index]));
file_text_writeln(test);
file_text_write_string(test,"cd "+filename_path(games_path[select_index])+"");
file_text_writeln(test);
file_text_write_string(test,'start "NX_Game_Boot" '+boot_res+'/wait '+'"'+filename_name(games_path[select_index])+'"');
file_text_writeln(test);
file_text_close(test);

//Prosseguir para inicialização
alarm[1] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controladores
if(is_playing == 1)
||(alarm[10] != -1)
||(alarm[11] != -1)
    exit;

//Inserir texto
if(dialog == 1){

    //Animação de transição (Começo)
    if(dialog_filterright &lt; 1280)
        dialog_filterright += 128;
    dialog_filterleft = -1;
    
    //Confirmar
    if(keyboard_check_pressed(vk_enter)){
    
        audio_play_sfx(sfx_nx_notification_general);
        dialog = 0;
        alarm[5] = -1;
        exit;
    };
    
    //SFX de tecla
    if(keyboard_check_pressed(vk_anykey))
        audio_play_sfx(sfx_nx_system_init);
    
    //Trocar caracteres inválidos
    if(keyboard_check(vk_anykey)){
    
        var stg_b,stg_1,stg_2,stg_3,stg_4,stg_5,stg_6,stg_7,stg_8,stg_9,stg_f;
        stg_b = string_copy(keyboard_string,0,48);
        stg_1 = string_replace(stg_b,"\","");
        stg_2 = string_replace(stg_1,"/","");
        stg_3 = string_replace(stg_2,"","");
        stg_4 = string_replace(stg_3,"*","");
        stg_5 = string_replace(stg_4,"","");
        stg_6 = string_replace(stg_5,"&lt;","");
        stg_7 = string_replace(stg_6,"&gt;","");
        stg_8 = string_replace(stg_7,'"',"");
        stg_9 = string_replace(stg_8,'#',"");
        stg_f = string_replace(stg_9,"'","");
        keyboard_string = stg_f;
        dialog_return = stg_f;
    };
        
    //Efeito
    if(alarm[5] == -1)
        alarm[5] = 15;
    exit;
};
else{

    //Animação de transição (Fim)
    if(dialog_filterright &gt;= 1280){
    
        if(dialog_filterleft &lt; 1280)
            dialog_filterleft += 128;
        else{
            dialog_filterright = -1;
            dialog_filterleft = -1;
        };
    };
};

//Gamepad
var gp_count;
for(gp_count = 0; gp_count &lt; 5; gp_count += 1){

    if(gamepad_is_connected(gp_count))
    &amp;&amp;(dialog == 0){
         
        //Up
        if(gamepad_button_check(gp_count,gp_padu))
            keyboard_key_press(vk_up);
        else if(gamepad_button_check_released(gp_count,gp_padu))
            keyboard_key_release(vk_up);
            
        //Down
        if(gamepad_button_check(gp_count,gp_padd))
            keyboard_key_press(vk_down);
        else if(gamepad_button_check_released(gp_count,gp_padd))
            keyboard_key_release(vk_down);
    
        //Left / L
        if(gamepad_button_check(gp_count,gp_padl))
            keyboard_key_press(vk_left);
        else if(gamepad_button_check_released(gp_count,gp_padl))
            keyboard_key_release(vk_left);
            
        if(gamepad_button_check(gp_count,gp_shoulderl))
            keyboard_key_press(vk_left);
        else if(gamepad_button_check_released(gp_count,gp_shoulderl))
            keyboard_key_release(vk_left);
        
        //Right / R
        if(gamepad_button_check(gp_count,gp_padr))
            keyboard_key_press(vk_right);
        else if(gamepad_button_check_released(gp_count,gp_padr))
           keyboard_key_release(vk_right);
           
        if(gamepad_button_check(gp_count,gp_shoulderr))
            keyboard_key_press(vk_right);
        else if(gamepad_button_check_released(gp_count,gp_shoulderr))
           keyboard_key_release(vk_right);

        //X, Y e Select - Move
        if(gamepad_button_check_pressed(gp_count,gp_face1))
            keyboard_key_press(vk_shift);
        else if(gamepad_button_check_released(gp_count,gp_face1))
            keyboard_key_release(vk_shift);
            
        if(gamepad_button_check_pressed(gp_count,gp_face4))
            keyboard_key_press(vk_shift);
        else if(gamepad_button_check_released(gp_count,gp_face4))
            keyboard_key_release(vk_shift);

        if(gamepad_button_check_pressed(gp_count,gp_select))
            keyboard_key_press(vk_shift);
        else if(gamepad_button_check_released(gp_count,gp_select))
            keyboard_key_release(vk_shift);
                            
        //A, B e Start - Enter
        if(gamepad_button_check_pressed(gp_count,gp_face2))
            keyboard_key_press(vk_enter);
        else if(gamepad_button_check_released(gp_count,gp_face2))
            keyboard_key_release(vk_enter);
            
        if(gamepad_button_check_pressed(gp_count,gp_face3))
            keyboard_key_press(vk_enter);
        else if(gamepad_button_check_released(gp_count,gp_face3))
            keyboard_key_release(vk_enter);
            
        if(gamepad_button_check_pressed(gp_count,gp_start))
            keyboard_key_press(vk_enter);
        else if(gamepad_button_check_released(gp_count,gp_start))
            keyboard_key_release(vk_enter);
    };
    if(gp_count &gt; 4)
        gp_count = 0;
};

//---------------------

//Opções de Interface
if(mouse_check_button_released(mb_left))
||(mouse_check_button_released(mb_right)){
        
    //eShop
    if(point_in_rectangle(mouse_x,mouse_y,436,504,436+86,504+86))
    &amp;&amp;(mouse_check_button(mb_left))
    {
        audio_play_sfx(sfx_nx_home_eshop)
    }
        
    //Album / Tema
    if(point_in_rectangle(mouse_x,mouse_y,544,504,544+86,504+86))
    {
        theme =! theme;
        if(theme == 0)
        {
            audio_play_sfx(sfx_nx_notification_general);
        }
        else
        {
            audio_play_sfx(sfx_nx_notification_general);
        }
    };
           
    //Adicionar jogos / Controllers
    if(point_in_rectangle(mouse_x,mouse_y,653-parental_offset,504,(653+86)-parental_offset,504+86))
    &amp;&amp;(alarm[7] == -1){
    
        audio_play_sfx(sfx_nx_home_controllers);
        window_set_fullscreen(0);
        alarm[7] = 2;
    };
};

    //Configurações
    if(point_in_rectangle(mouse_x,mouse_y,761-parental_offset,504,(761+86)-parental_offset,504+86)){}
    
    //Encerrar
    if(point_in_rectangle(mouse_x,mouse_y,869,504,869+86,504+86))
    &amp;&amp;(mouse_check_button(mb_left))
    {
    game_end();
    };
    
    //Alterar thumbnail do jogo
    if(keyboard_check_released(vk_control))
    &amp;&amp;(games_total &gt; 0)
    &amp;&amp;(alarm[9] == -1){
    
        audio_play_sfx(sfx_nx_notification_general);
        window_set_fullscreen(0);
        alarm[9] = 2;
    };
    
    //Alterar nome do jogo
    if(keyboard_check_released(vk_alt))
    &amp;&amp;(games_total &gt; 0)
    &amp;&amp;(alarm[6] == -1){

        if(filename_ext(games_path[select_index]) == ".exe"){
        
            //Alterar nome
            audio_play_sfx(sfx_nx_notification_general);
            dialog_description = "Set Game Title:"
            keyboard_string = games_title[select_index];
            dialog_return = games_title[select_index];
            dialog = 1;
            alarm[6] = 1;
        };
    };
    
    
//Cor do seletor de jogos
if(col_mod == 0){

    if(col_numb &lt; 1)
        col_numb += 0.05;
    else
        col_mod =! col_mod;
};
else{

    if(col_numb &gt; 0)
        col_numb -= 0.05;
    else
        col_mod =! col_mod;
};

//Navegação da lista de jogos
if(alarm[0] == -1)
&amp;&amp;(games_total &gt; 0){

    //Mover jogo
    if(keyboard_check_pressed(vk_shift)){
    
        move = 1;
        move_origin = select_index;
    };
    
    //Navegação rápida (Loop)
    if(keyboard_check(vk_right)){
    
        //Intervalo
        if(nav_time &gt; 0)
            nav_time--;
        else{
        
            //Delay em frames
            nav_time = 5;
            
            //Próximo
            if(select_index &lt; games_total-1){
                select_index++;
                audio_play_sfx(sfx_nx_system_gameselect);
            };
        };
    };
    else if(keyboard_check(vk_left)){
    
        //Intervalo
        if(nav_time &gt; 0)
            nav_time--;
        else{
            
            //Delay em frames
            nav_time = 5;
                    
            //Anterior
            if(select_index &gt; 0){
                select_index--;
                audio_play_sfx(sfx_nx_system_gameselect);
            };
        };
    };
    else
        nav_time = 30;

    //Normal
    if(keyboard_check_pressed(vk_right)){
        
        offset_v = 0;
        
        //Próximo
        if(select_index &lt; games_total-1){
            select_index++;
            audio_play_sfx(sfx_nx_system_gameselect);
        };
        else
            audio_play_sfx(sfx_nx_system_gameselect);
    };
    else if(keyboard_check_pressed(vk_left)){
    
        offset_v = 0;
        
        //Anterior
        if(select_index &gt; 0){
            select_index--;
            audio_play_sfx(sfx_nx_system_gameselect);
        };
        else
            audio_play_sfx(sfx_nx_system_gameselect);
    };
    else if(keyboard_check_pressed(vk_up)){
    
        offset_v = 0;
        
        //Fim
        select_index = games_total-1;
        audio_play_sfx(sfx_nx_system_gameselect);
    };
    else if(keyboard_check_pressed(vk_down)){
    
        offset_v = 0;
        
        //Começo
        select_index = 0;
        audio_play_sfx(sfx_nx_system_gameselect);
    };
    else if(keyboard_check_pressed(vk_enter)){
        
        if(keyboard_check(vk_alt)){
        
            //Fullscreen
            audio_play_sfx(sfx_nx_notification_general);
            fullscreen =! fullscreen;
            alarm[4] = 3;
        };
        else{
        
            //Confirmar após mover
            if(move == 1){
        
                //Se for local diferente...
                if(select_index != move_origin){
                
                    //SFX
                    audio_play_sfx(sfx_nx_system_gameselect);
                    games_title[select_index] = "Moving...";
                    
                    //Copiar
                    move_temp_title = games_title[move_origin];
                    move_temp_path = games_path[move_origin];                  
                    move_temp_thumbnail = sprite_duplicate(games_thumb[move_origin]);
                    
                    //Deletar de origem
                    sprite_delete(games_thumb[move_origin]);
                    
                    //Renomear arquivo de origem temporariamente...
                    file_rename_fmns(game_save_id+"collection\game_"+string(move_origin)+".ini",game_save_id+"collection\game_TMP.ini");
                    file_rename_fmns(game_save_id+"collection\game_"+string(move_origin)+".png",game_save_id+"collection\game_TMP.png");
                    
                    //Mover arquivo destino apra de origem...
                    alarm[11] = 10;
                };
                else{
                
                    //SFX
                    audio_play_sfx(sfx_nx_system_gameselect);
                    
                    //Finalizar
                    move = 0;
                    move_origin = -1;
                };
            };
            else{
            
                //Iniciar jogo
                if(games_total &gt; 0)
                &amp;&amp;(file_exists_fmns(games_path[select_index])){
                
                    //Iniciar máximizado
                    if(fullscreen == 1)
                        boot_res = "/max ";
                    else
                        boot_res = "";
                
                    window_set_fullscreen(0);
                    audio_play_sfx(sfx_nx_system_gamestart);
                    alarm[0] = 15;
                };
            };
        };
    };       
};

//Fullscreen
if(keyboard_check_released(vk_f10))
{
    audio_play_sfx(sfx_nx_notification_general);
    fullscreen =! fullscreen;
    alarm[4] = 3;
};
    
//Screenshot
var nx_screenshot;
if(keyboard_check_released(vk_f12)){
nx_screenshot = get_save_filename_ext("Screenshot|*.png", "", working_directory, "Save a screenshot");
if nx_screenshot != ""
{
    screen_save(nx_screenshot);
}};
        
//Deletar jogo
if(keyboard_check_released(vk_delete))
&amp;&amp;(games_total &gt; 0)
&amp;&amp;(alarm[10] == -1)
{
    //Deletar sprite
    sprite_delete(games_thumb[select_index]);
    
    //Nulo
    games_title[select_index] = "Deleting...";
  
    //Deletar arquivos
    file_delete_fmns(game_save_id+"collection\game_"+string(select_index)+".png");
    file_delete_fmns(game_save_id+"collection\game_"+string(select_index)+".ini");
                      
    //Deletar ultimo (sendo o ultimo selecionado)
    if(select_index == games_total-1)
    &amp;&amp;(select_index &gt; 0)
    {
        games_path[select_index] = "";
            
        //Decrementar
        audio_play_sfx(sfx_nx_notification_general);
        games_total--;            
        select_index--;
            
        //Salvar total de jogos
        ini_open(game_save_id+"collection\_total.ini");
        ini_write_string("NX_TITLE","total",string(games_total));
        ini_close();
            
        //Atualizar RPC
        event_user(0);
    };
    //Mover tudo
    else
    {
        audio_play_sound(sfx_nx_notification_general,0,1);
        move_rest = select_index;
        alarm[10] = 10;
    };
};

//Standby
if(os_is_paused())
    audio_play_sfx(sfx_nx_system_shutdown);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Discord RPC padrão
discord_update_presence("🔎 | Choosing between " + string(games_total) + " games","🏠 | HOME Menu","icn_nx_launcher","icn_nx_launcher_home");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Salvar confirgurações e encerrar o RPC
//Tocar SFX de encerramento
audio_play_sfx(sfx_nx_system_shutdown);

//Salvar configurações
ini_open(game_save_id+"config.ini");
ini_write_real("NX_SETTINGS","theme",theme);
ini_write_real("NX_SETTINGS","fullscreen",fullscreen);
ini_close();

//Encerrar DLLs do RPC
discord_free_app();
discord_free_dll();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Carregar configurações e iniciar o launcher
//Anti-aliasing
display_reset(8, true);

//Menor que 1080p
if(display_get_width() &lt; 1920-8){
    
    //Menor que 720p (Adequado para 4:3)
    if(display_get_width() &lt; 1280-8){
        
        //Ainda menor... (WTf? alguém tem display menor ue isso?)
        if(display_get_width() &lt; 800-8)
            window_set_size(320,180);
        else
            window_set_size(640,360);
    };
    else
        window_set_size(800,450);
};
else   
    window_set_size(1280,720);
    
//Tamanho padrão da interface relativa ao display
display_set_gui_size(1280,720);

//Centralizar janela
alarm[3] = 2;

//Configurações do Launcher
ini_open(game_save_id+"config.ini");
theme = ini_read_real("NX_SETTINGS","theme",0);
fullscreen = ini_read_real("NX_SETTINGS","fullscreen",0);
select_index = ini_read_real("NX_SETTINGS","position",0);
ini_close();

//Definir fullscreen
alarm[4] = 6;

//Buscar total de jogos
ini_open(game_save_id+"collection\_total.ini");
games_total = real(ini_read_string("NX_TITLE","total","0"));
ini_close();

//Impedir seletor de começar fora da lista
if(select_index &gt; games_total-1){
    if(games_total == 0)
        select_index = 0
    else
        select_index = games_total-1;
};

//Criar lista de jogos
var i;
for(i=0; i&lt;games_total; i+=1){

    ini_open(game_save_id+"collection\game_"+string(i)+".ini");
    games_title[i] = ini_read_string("NX_TITLE","title","???");
    games_path[i] = ini_read_string("NX_TITLE","path","");
    if(file_exists(game_save_id+"collection\game_"+string(i)+".png"))
        games_thumb[i] = sprite_add(game_save_id+"collection\game_"+string(i)+".png",0,0,0,0,0);
    else
        games_thumb[i] = sprite_add(game_save_id+"undefined.png",0,0,0,0,0);
    ini_close();
};

//Criar perfil
ini_open(game_save_id + 'config.ini');
_ProfileImage = ini_read_string("NX_PROFILE", "profileicon", game_save_id + "profile.png");
_ProfileName = ini_read_string("NX_PROFILE", "profilename", "User");
_ProfileIcon = sprite_add(_ProfileImage,0,false,false,0,0);
ini_close();

//Rich Presence
discord_init_dll();
discord_init_app("518968328744861704");
discord_update_presence("","","","");
event_user(0);

//Tocar SFX de inicialização
audio_play_sfx(sfx_nx_system_init);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desenhar toda a UI
//Variáveis de cor do Switch
c_switchaqua = (make_colour_rgb(82,209,202));
c_switchaqua_alt = (make_colour_rgb(0,153,153));
c_switchaqua_name = (make_colour_rgb(0,204,204));
c_switchblue = (make_colour_rgb(70,152,200));
c_switchblue_alt = (make_colour_rgb(0,76,153));
c_switchblue_name = (make_colour_rgb(102,178,255));

//Variáveis de mistura de cor
//Seletor e highlight
var c_switchaqua_merge = merge_colour(c_switchaqua, c_switchaqua_alt,col_numb);
var c_switchblue_merge = merge_colour(c_switchblue, c_switchblue_alt,col_numb);
//Nome do jogo selecionado
var c_switchaqua_nmerge = merge_colour(c_switchaqua, c_switchaqua_name,col_numb);
var c_switchblue_nmerge = merge_colour(c_switchblue, c_switchblue_name,col_numb);

//Ignorar script enquanto estiver suspenso.
if (is_playing == 1)
{
    exit;
}

//Plano de fundo
if (theme == 0)
{
    draw_background_tiled(bg_nx_system_light, 0, 0);
}
else
{
    draw_background_tiled(bg_nx_system_dark, 0, 0);
}

//Perfil
draw_sprite_ext(_ProfileIcon,0,64,30,1,1,0,c_white,1);
draw_set_font(fnt_ns_system_gamelist);
if(theme == 0)
{
    draw_set_colour(make_colour_rgb(82,209,202));
}
else
{
    draw_set_colour(make_colour_rgb(70,152,200));
}

//Data e hora
var time_hour = string_replace_all(string_format(current_hour,2,0)," ","0");
var time_minute = string_replace_all(string_format(current_minute,2,0)," ","0");
if (theme == 0)
{
    draw_set_font(fnt_ns_system_clock)
    draw_set_colour(c_black);
    draw_text(1048, 38, time_hour + ":" + time_minute);
}
else
{
    draw_set_font(fnt_ns_system_clock)
    draw_set_colour(c_white);
    draw_text(1048, 38, time_hour + ":" + time_minute);
}

//Conexão
if os_is_network_connected()
{
        draw_sprite_ext(spr_ui_network_connected,theme,1184,47,1,1,0,c_white,1);
}
else if not os_is_network_connected()
{
        draw_sprite_ext(spr_ui_network_disconnected,theme,1184,47,1,1,0,c_white,1);
}

//Barra (Footer)
draw_sprite_ext(spr_ui_line,theme,29,646,1,1,0,c_white,1);

//Váriavel
if(gamepad_is_connected(0) == 1) || (gamepad_is_connected(4) == 1)
{
    //Controle
    draw_sprite_ext(spr_ui_controller_type,theme+2,51,664,1,1,0,c_white,1);
    
    //Botões de controle
    if(games_total &gt; 0)
    {
        draw_sprite_ext(spr_ui_controller_map,theme+6,860,662,1,1,0,c_white,1);
        draw_sprite_ext(spr_ui_controller_map,theme+2,1080,662,1,1,0,c_white,1);
        draw_set_font(fnt_ns_system_small)
        if (theme == 0)
        {
            draw_set_colour(c_black)
        }
        else
        {
            draw_set_colour(c_white)
        }
        draw_text(922, 664, "Move")
        draw_text(1140, 664, "Start");
    }
};
else
{
    //Controle
    draw_sprite_ext(spr_ui_controller_type,theme,51,664,1,1,0,c_white,1);
    
    //informações básicas
    if(games_total &gt; 0)
    {
        draw_sprite_ext(spr_ui_controller_map,theme+4,860,662,1,1,0,c_white,1);
        draw_sprite_ext(spr_ui_controller_map,theme,1080,662,1,1,0,c_white,1);
        draw_set_font(fnt_ns_system_small)
        if (theme == 0)
        {
            draw_set_colour(c_black)
        }
        else
        {
            draw_set_colour(c_white)
        }
        draw_text(922, 664, "Move")
        draw_text(1140, 664, "Start");
    }
};

//------------- Ícones -------------
//Messages
draw_sprite_ext(spr_btn_messages,theme,322+parental_offset,498,1,1,0,c_white,parental_fadeicons);
    
//eShop
draw_sprite_ext(spr_btn_eshop,theme,430+parental_offset,498,1,1,0,c_white,parental_fadeicons);
    
//Album / Theme
draw_sprite_ext(spr_btn_album,theme,540+parental_offset,498,1,1,0,c_white,parental_fadeicons);

//Controllers / Add game
draw_sprite_ext(spr_btn_controllers,theme,647-parental_offset,498,1,1,0,c_white,1)
if(games_total == 0)
{
    //Highlight
    if (theme == 0)
    {
        draw_sprite_ext(spr_ui_highlight,0,647-parental_offset,498,1,1,0,c_switchaqua_merge,parental_fadeicons);
    }
    else
    {
        draw_sprite_ext(spr_ui_highlight,0,650-parental_offset,498,1,1,0,c_switchblue_merge,parental_fadeicons);
    }
};

//Settings
draw_sprite_ext(spr_btn_settings,theme,755-parental_offset,498,1,1,0,c_white,1);

//Power
draw_sprite_ext(spr_btn_power,theme,863-parental_offset,498,1,1,0,c_white,parental_fadeicons);


//------------- Lista de Jogos -------------

//Rolagem (de acordo com offset)
draw_set_font(fnt_ns_system_gamelist)
if(select_index &gt; 1)
    offset = 502+(-276*select_index);
else
    offset = 98;

//Lista de jogos (Mostrar apenas o que esta na tela)
var i, i_start, i_end;
if(select_index &gt; 1){

    i_start = select_index-2;
    i_end = select_index+3;
};
else{

    i_start = 0;
    i_end = select_index+5;
}; for(i=i_start; i&lt;i_end; i+=1){

    var vv = 0;
    if(select_index == i)
        vv = offset_v = -2;
                
    //Sombra
    draw_sprite(spr_launcher_thumbnail_shadow,theme,offset+(256+20)*i,194-vv);
    
    //Blocos vázios
    if(i &gt; games_total-1)
    ||((move == 1)&amp;&amp;(i == move_origin))
        draw_sprite(spr_launcher_thumbnail,theme,offset+(256+20)*i,194-vv);
    //Thumbnail dos jogos
    else{
    
        if(sprite_exists(games_thumb[i]))
        &amp;&amp;(games_total &gt; 0)
            draw_sprite_stretched(games_thumb[i],0,offset+(256+20)*i,194-vv,256,256);
    };
};
    
//Seletor de jogos
if(select_index &lt; games_total+1)
&amp;&amp;(games_total &gt; 0){

    var _msg, _col1, _col2;
    
    //Mover
    if(move == 1){
    
        _msg = games_title[move_origin];
        _col1 = c_yellow;
        _col2 = c_orange;    
    };
    else{
    
        //Padrão
        if(file_exists_fmns(games_path[select_index])){
        
            _msg = games_title[select_index];
            _col1 = make_colour_rgb(82,209,202); 
            _col2 = make_colour_rgb(70,152,200);
        };
        //Jogo não encotrado
        else{
     
            _msg = "[Game not found]";
            _col1 = c_red;
            _col2 = c_maroon;
        };
    };

    //Mostrar thumbnail que esta sendo movida
    var move_offset = 0;
    if(move == 1){
    
        move_offset = 32;
        if(sprite_exists(games_thumb[move_origin])){
        
            draw_set_alpha(col_numb+0.4);
            draw_sprite_stretched(games_thumb[move_origin],0,(offset-0)+276*select_index,194-32-2,256,256);
            draw_set_alpha(1);
        };
    };
    
    //Seletor
    col = merge_colour(_col1,_col2,col_numb);
    offset_v = 0;
    if (theme == 0)
    {
        draw_sprite_ext(spr_launcher_selector,0,(offset-10)+276*select_index,183-offset_v-move_offset,1,1,0,c_switchaqua_merge,1);
    }
    else
    {
        draw_sprite_ext(spr_launcher_selector,0,(offset-10)+276*select_index,183-offset_v-move_offset,1,1,0,c_switchblue_merge,1);
    }

    //Nome do jogo selecionado
    if(select_index == 0)
    {
        if (theme == 0)
        {
            draw_text_colour(offset-16,123-offset_v-move_offset,_msg,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,1);
        }
        else
        {
            draw_text_colour(offset-16,123-offset_v-move_offset,_msg,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,1);
        }
    }  
    else
    {
        draw_set_halign(fa_center);
        if (theme == 0)
        {
            draw_text_colour(offset+(276*select_index)+256/2,123-offset_v-move_offset,_msg,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,1);
        }
        else
        {
            draw_text_colour(offset+(276*select_index)+256/2,123-offset_v-move_offset,_msg,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,1);
        }
        draw_set_halign(fa_left);
    };
};

//------------- Dialogo -------------
//Fundo
draw_set_colour(c_black);
draw_set_alpha(0.9);
draw_rectangle(dialog_filterleft,-2000,dialog_filterright,4000,0);
draw_set_colour(c_white);
draw_set_alpha(1);
    
if(dialog == 1){
    
    //Descrição
    draw_set_colour(c_aqua);
    draw_set_halign(fa_center);
    draw_text(1280/2,720/2-48,dialog_description);
    draw_set_colour(c_white);
    
    //Texto
    draw_text(1280/2,720/2,dialog_return+dialog_inputb);
    draw_set_halign(fa_left);
    draw_set_colour(c_white);
};

//Deletando...
if(alarm[10] != -1){

    draw_set_colour(c_black);
    draw_set_alpha(0.7);
    draw_rectangle(0,-2000,1280,4000,0);
    draw_set_alpha(1);
    draw_set_colour(c_white);
    
    //Texto
    draw_set_colour(c_aqua);
    draw_set_halign(fa_center);
    draw_text(1280/2,(720/2)-32,"Deleting...");
    draw_set_halign(fa_left);
    draw_set_colour(c_white);
};

//Filtro
if!(window_has_focus())
&amp;&amp;!(window_get_fullscreen()){

    draw_set_colour(c_black);
    draw_set_alpha(0.7);
    draw_rectangle(0,0,1280,720,0);
    draw_set_alpha(1);
    draw_set_colour(c_white);
};

//Highlight + texto
//Messages
if(point_in_rectangle(mouse_x,mouse_y,328,504,328+86,504+86))
{
    if (theme == 0)
{
    draw_sprite_ext(spr_ui_highlight,0,324+parental_offset,498,1,1,0,c_switchaqua_merge,parental_fadeicons);
    draw_set_font(fnt_ns_system_highlight);
    draw_set_halign(fa_center);
    draw_text_colour(375-parental_offset,595,"Messages",c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,1);
    draw_set_halign(fa_left);
    draw_set_font(fnt_ns_system_highlight);
}
else
{
    draw_sprite_ext(spr_ui_highlight,0,324+parental_offset,498,1,1,0,c_switchblue_merge,parental_fadeicons);
    draw_set_font(fnt_ns_system_highlight);
    draw_set_halign(fa_center);
    draw_text_colour(375-parental_offset,595,"Messages",c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,1);
    draw_set_halign(fa_left);
    draw_set_font(fnt_ns_system_highlight);
    }
};
//eShop
if(point_in_rectangle(mouse_x,mouse_y,436,504,436+86,504+86))
{
    if (theme == 0)
{
    draw_sprite_ext(spr_ui_highlight,0,430+parental_offset,498,1,1,0,c_switchaqua_merge,parental_fadeicons);
    draw_set_font(fnt_ns_system_highlight);
    draw_set_halign(fa_center);
    draw_text_colour(480-parental_offset,595,"eShop",c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,1);
    draw_set_halign(fa_left);
    draw_set_font(fnt_ns_system_highlight);
}
else
{
    draw_sprite_ext(spr_ui_highlight,0,430+parental_offset,498,1,1,0,c_switchblue_merge,parental_fadeicons);
    draw_set_font(fnt_ns_system_highlight);
    draw_set_halign(fa_center);
    draw_text_colour(480-parental_offset,595,"eShop",c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,1);
    draw_set_halign(fa_left);
    draw_set_font(fnt_ns_system_highlight);
    }
};
//Album
if(point_in_rectangle(mouse_x,mouse_y,544,504,544+86,504+86))
{
    if (theme == 0)
{
    draw_sprite_ext(spr_ui_highlight,0,540+parental_offset,498,1,1,0,c_switchaqua_merge,parental_fadeicons);
    draw_set_font(fnt_ns_system_highlight);
    draw_set_halign(fa_center);
    draw_text_colour(590+parental_offset,595,"Themes",c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,1);
    draw_set_halign(fa_left);
    draw_set_font(fnt_ns_system_highlight);
}
else
{
    draw_sprite_ext(spr_ui_highlight,0,540+parental_offset,498,1,1,0,c_switchblue_merge,parental_fadeicons);
    draw_set_font(fnt_ns_system_highlight);
    draw_set_halign(fa_center);
    draw_text_colour(590+parental_offset,595,"Themes",c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,1);
    draw_set_halign(fa_left);
    draw_set_font(fnt_ns_system_highlight);
    }
};
//Controllers / Add game
if(point_in_rectangle(mouse_x,mouse_y,653-parental_offset,504,653-parental_offset+86,504+86))
{
    if (theme == 0)
{
    draw_sprite_ext(spr_ui_highlight,0,651-parental_offset,498,1,1,0,c_switchaqua_merge,parental_fadeicons);
    draw_set_font(fnt_ns_system_highlight);
    draw_set_halign(fa_center);
    draw_text_colour(697+parental_offset,595,"Add game",c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,1);
    draw_set_halign(fa_left);
    draw_set_font(fnt_ns_system_highlight);
}
else
{
    draw_sprite_ext(spr_ui_highlight,0,651-parental_offset,498,1,1,0,c_switchblue_merge,parental_fadeicons);
    draw_set_font(fnt_ns_system_highlight);
    draw_set_halign(fa_center);
    draw_text_colour(697+parental_offset,595,"Add game",c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,1);
    draw_set_halign(fa_left);
    draw_set_font(fnt_ns_system_highlight);
    }
};
//Settings
if(point_in_rectangle(mouse_x,mouse_y,761-parental_offset,504,761-parental_offset+86,504+86))
{
    if (theme == 0)
{
    draw_sprite_ext(spr_ui_highlight,0,755-parental_offset,498,1,1,0,c_switchaqua_merge,parental_fadeicons);
    draw_set_font(fnt_ns_system_highlight);
    draw_set_halign(fa_center);
    draw_text_colour(805+parental_offset,595,"Settings",c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,1);
    draw_set_halign(fa_left);
    draw_set_font(fnt_ns_system_highlight);
}
else
{
    draw_sprite_ext(spr_ui_highlight,0,755-parental_offset,498,1,1,0,c_switchblue_merge,parental_fadeicons);
    draw_set_font(fnt_ns_system_highlight);
    draw_set_halign(fa_center);
    draw_text_colour(805+parental_offset,595,"Settings",c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,1);
    draw_set_halign(fa_left);
    draw_set_font(fnt_ns_system_highlight);
    }
};
//Power
if(point_in_rectangle(mouse_x,mouse_y,869,504,869+86,504+86))
{
    if (theme == 0)
{
    draw_sprite_ext(spr_ui_highlight,0,863-parental_offset,498,1,1,0,c_switchaqua_merge,parental_fadeicons);
    draw_set_font(fnt_ns_system_highlight);
    draw_set_halign(fa_center);
    draw_text_colour(913+parental_offset,595,"Power",c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,c_switchaqua_nmerge,1);
    draw_set_halign(fa_left);
    draw_set_font(fnt_ns_system_highlight);
}
else
{
    draw_sprite_ext(spr_ui_highlight,0,863-parental_offset,498,1,1,0,c_switchblue_merge,parental_fadeicons);
    draw_set_font(fnt_ns_system_highlight);
    draw_set_halign(fa_center);
    draw_text_colour(913+parental_offset,595,"Power",c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,c_switchblue_nmerge,1);
    draw_set_halign(fa_left);
    draw_set_font(fnt_ns_system_highlight);
    }
};

//Cursor
if (theme == 0)
{
    draw_sprite_ext(spr_csr_normal,0,mouse_x,mouse_y,1,1,0,c_switchaqua_name,1);
}
else
{
    draw_sprite_ext(spr_csr_normal,0,mouse_x,mouse_y,1,1,0,c_switchblue_name,1);
}
window_set_cursor(cr_none);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
